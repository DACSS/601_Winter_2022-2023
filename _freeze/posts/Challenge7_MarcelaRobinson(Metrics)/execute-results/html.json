{
  "hash": "03c3cbd7c88fb99ff248a577463207e0",
  "result": {
    "markdown": "---\ntitle: \"Challenge7_MarcelaRobinson\"\nauthor: \"Marcela Robinson\"\neditor: visual\nDate: January 20, 2023\ndescription: \"Visualizing Multiple Dimensions\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: timechange\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mmrobinson/Desktop/Github/601_Winter_2022-2023\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreport<-here(\"posts\", \"_data\", \"End of the Semester Report Fall 2022.csv\")%>%\nread_csv()\n\nprint(report, table.classes = 'table-condensed')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 63 × 13\n   Metrics       7/1/2…¹ 8/1/2…² 9/1/2…³ 10/1/…⁴ 11/1/…⁵ 12/1/…⁶ 7/1/2…⁷ 8/1/2…⁸\n   <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 Total Unique… 331     778     945     768     706     595     367     551    \n 2 Total logins  869     1,676   3,240   2,507   1,955   1,553   816     1,402  \n 3 Count of uni… 16      239     97      30      19      14      8       91     \n 4 Count of stu… 134     296     358     327     320     290     207     296    \n 5 % of student… 58%     46%     49%     52%     54%     57%     55%     47%    \n 6 Count of stu… 227     625     715     614     591     500     370     619    \n 7 % of Public … 98%     98%     98%     98%     99%     99%     99%     99%    \n 8 First Year S… 13      245     213     169     172     120     7       85     \n 9 First Year S… 2%      44%     38%     31%     31%     22%     1%      17%    \n10 Sophomore St… 105     192     273     228     229     205     85      184    \n# … with 53 more rows, 4 more variables: `9/1/2022` <chr>, `10/1/2022` <chr>,\n#   `11/1/2022` <chr>, `12/1/2022` <chr>, and abbreviated variable names\n#   ¹​`7/1/2021`, ²​`8/1/2021`, ³​`9/1/2021`, ⁴​`10/1/2021`, ⁵​`11/1/2021`,\n#   ⁶​`12/1/2021`, ⁷​`7/1/2022`, ⁸​`8/1/2022`\n```\n:::\n:::\n\n\nFor this challenge, I've decided to use the data set **report**. This data set contains information regarding appointments, student login information, event, and other relevant metrics for a Career Services Office. The report measures counts and percentages from July 2021 through December 2021; and July 2022 through December 2022.\n\n**Clean the data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n #Pivot my data longer to reduce the number of columns\nreport_dates <- pivot_longer(report,-1, names_to = \"Date\", values_to = \"Values\")%>%\n  #Mutate the Date column to convert into a date format\nmutate(Date=mdy(Date))\n\n#Pivot data wider to assign each metric a value\nreport_dates<-pivot_wider(report_dates, names_from = Metrics, values_from = Values) \n\n#Mutate columns with percentages to remove the % symbol and convert to numeric values \nreport_dates<-report_dates%>% \n  mutate(`% of student with a completed profile`= str_remove(`% of student with a completed profile`,\"%\"), `% of student with a completed profile` = as.numeric(`% of student with a completed profile`)/100)%>%\n    mutate(`% of Public Profiles to Employers`= str_remove(`% of Public Profiles to Employers`,\"%\"),`% of Public Profiles to Employers` = as.numeric(`% of Public Profiles to Employers`)/100)%>%\n  mutate(`First Year Student Logins Percentage` = str_remove(`First Year Student Logins Percentage`, \"%\"), `First Year Student Logins Percentage` = as.numeric(`First Year Student Logins Percentage`)/100)%>%\n  mutate(`Sophomore Student Logins Percentage` = str_remove(`Sophomore Student Logins Percentage`, \"%\"), `Sophomore Student Logins Percentage` = as.numeric(`Sophomore Student Logins Percentage`)/100)%>%\n  mutate(`Junior Student Logins Percentage` = str_remove(`Junior Student Logins Percentage`, \"%\"), `Junior Student Logins Percentage` = as.numeric(`Junior Student Logins Percentage`)/100)%>%\n  mutate(`Senior Student Logins Percentage` = str_remove(`Senior Student Logins Percentage`, \"%\"),`Senior Student Logins Percentage` = as.numeric(`Senior Student Logins Percentage`)/100)\n```\n:::\n\n\n**Visualizations**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Select login metrics for visualization\nLogins<-report_dates%>%   \nselect(`Total Unique Student Logins`, `Total logins`, Date)%>%\n#Pivot the data to reduce number of columns   \npivot_longer(`Total Unique Student Logins`:`Total logins`, names_to = \"Metrics\", values_to = \"Values\")%>% \n#Remove \",\" from Values and convert to numeric values\nmutate(Values = str_remove(Values, \",\"))%>%   \nmutate(Values = as.numeric(Values))%>% \n#Create a new column with the year       \nmutate(Date =ymd(Date), month = month(Date), year = year(Date))\n\n#Plot a grapth for Logins\nggplot(Logins, aes(x = Date, y = Values))+\n  geom_line(aes(colour = Metrics))+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.4, hjust=1), plot.title = element_text(hjust = 0.5), legend.title = element_blank())+\n  labs(x = \"Total Logins by Date\", y = \"Count of Logins\", title = \"Student Logins\")+\n#scale_fill_brewer(labels = c(\"Total Logins\", \"Unique Student Logins\"))+\n  scale_x_date(NULL, date_labels = \"%b %y\",breaks=\"1 months\")+\n  scale_y_continuous(limits=c(0, 3240))+\n  facet_wrap(vars(year), scales=\"free_x\")\n```\n\n::: {.cell-output-display}\n![](Challenge7_MarcelaRobinson-Metrics-_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nFor the first graph, I chose the geom_line and facet_wrap functions to compare the number of logins and unique student logins by year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Select appointment metrics for visualization\nAppointments<-report_dates%>%\n  select(`First Year Completed Appointments`, `Sophomore Completed Appointments`, `Junior Completed Appointments`, `Senior Completed Appointments`, `Alumni Completed Appointments`, Date)%>% \n#Pivot the data to reduce number of columns \n  pivot_longer(`First Year Completed Appointments`:`Alumni Completed Appointments`, names_to = \"Metrics\", values_to = \"Values\")%>%\n#Remove \",\" from Values and convert to numeric values\n   mutate(Values = str_remove(Values, \",\"))%>%\n   mutate(Values = as.numeric(Values))%>%\n#Create a new column with the year   \n   mutate(Date =ymd(Date), month = month(Date), year = year(Date))\n\nggplot(Appointments, aes(x= Date, y = Values, fill = Metrics))+\n  geom_col(colour = \"black\")+  \n  labs(x=\"Month\", y=\"Count of Completed Appointments\", title = \"Completed Appointments by Class Year\")+ scale_fill_brewer(palette = 12, name = \"Class Year\", labels = c(\"Alumni\", \"First Year\", \"Junior\", \"Senior\", \"Sophomore\"))+\n   scale_x_date(NULL, date_labels = \"%b %y\",breaks=\"1 months\")+\n   theme(axis.text.x = element_text(angle = 90, vjust = 0.4, hjust=1))+\n   facet_wrap(vars(year), scales=\"free_x\")\n```\n\n::: {.cell-output-display}\n![](Challenge7_MarcelaRobinson-Metrics-_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nMy next graph represent the number of appointments per class year. I also used the function facet_wrap to compare 2021 and 2022. Based on this graph, I can easily see the number of appointments were much higher in September 2021 for alumni and first year students.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAppointment_type<-report_dates%>%\n  select(`Total Count of Completed Appointments`,`Total Count of No Show Appointments`, `Total Count of Cancellations`, `Total Count of Peer Appointments`, Date)%>%\n  #mutate(Month=as.character(Month), Month=recode(Month, “7”=“July”,”8”=“August”),\n         #mutate(Month=factor(Month,levels=c(“July”,”August”), ordered=T)\n  #Pivot the data to reduce number of columns \n  pivot_longer(`Total Count of Completed Appointments`:`Total Count of Peer Appointments`, names_to = \"Metrics\", values_to = \"Values\")%>%\n#Remove \",\" from Values and convert to numeric values\n   mutate(Values = str_remove(Values, \",\"))%>%\n   mutate(Values = as.numeric(Values))\n\n#Plot a graph for appointment types\nggplot(Appointment_type, aes(x = Date, y = Values, fill = Metrics))+\n         geom_col(colour = \"black\")+coord_flip()+\n  facet_wrap(vars(Metrics), scales=\"free_x\")+\n   scale_x_date(NULL, date_labels = \"%b %y\",breaks=\"1 months\")+\n  scale_fill_brewer(palette = 12, name = \"Appointment Types\", labels = c(\"Cancelled\", \"Completed\", \"No Show\", \"Peer Appointment\"))+\n  theme(strip.text.x = element_text(size=8, face=\"italic\", color=\"purple\"))\n```\n\n::: {.cell-output-display}\n![](Challenge7_MarcelaRobinson-Metrics-_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nLastly, for my third graph, I also use the function facet_wrap again to compare by appointment types.\n",
    "supporting": [
      "Challenge7_MarcelaRobinson-Metrics-_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}