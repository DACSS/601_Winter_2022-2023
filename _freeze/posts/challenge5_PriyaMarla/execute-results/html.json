{
  "hash": "6898eec42b739027b38a949fec156f72",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Priya Marla\"\ndescription: \"Introduction to Visualization\"\ndate: \"1/14/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_hh\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(dplyr)\nlibrary(scales)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal ⭐\n-   pathogen cost ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   railroads ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb<-here(\"posts\",\"_data\",\"AB_NYC_2019.csv\") %>%\nread_csv()\nairbnb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n\n```{.r .cell-code}\nairbnb %>%\n  select(neighbourhood_group) %>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nairbnb %>%\n  select(neighbourhood) %>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 221\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n\"AB_NYC_2019.csv\" dataset consists of a list of airbnb's in 5 boroughs in New York City. There are 48895 rows and 16 columns. Each column represents specific data about the airbnb like location, owner, rating, etc.\n\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nData is already tidy. No extra work needs to be done.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(airbnb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\nGetting the count of neighbourhood_group for using it in the bar graph. Mutated new variables from room_type statistics to know the percentage to be plotted on the pie chart and to know the labels and exactly where top place them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#count for neighbourhood_group\nCountBoroughs <- airbnb %>%\n count(neighbourhood_group) \nCountBoroughs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  neighbourhood_group     n\n  <chr>               <int>\n1 Bronx                1091\n2 Brooklyn            20104\n3 Manhattan           21661\n4 Queens               5666\n5 Staten Island         373\n```\n:::\n\n```{.r .cell-code}\n#count for room_type\nCountType <- airbnb %>%\n  count(room_type)\nCountType <- CountType %>%\n  mutate(perc = round(n*100/sum(n),1), #new variable \"perc\" to know the percentage to be used in the pie chart\n         pie = cumsum(perc) - (0.5*perc), #\"pie\" to locate the location of the label\n         label = paste0(round(perc), \"%\")) %>% #\"label\" to get the label for each part of the pie chart\n  select(-n)\nCountType\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  room_type        perc   pie label\n  <chr>           <dbl> <dbl> <chr>\n1 Entire home/apt  52    26   52%  \n2 Private room     45.7  74.8 46%  \n3 Shared room       2.4  98.9 2%   \n```\n:::\n:::\n\n\n## Univariate Visualizations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Classifying the neighbourhood_group column\nggplot(CountBoroughs, aes(x = neighbourhood_group, y = n/sum(n))) + #plot the x-axis and y-axis\n  geom_bar(fill = \"purple\", \n           color=\"black\", stat = \"identity\") + #to get the bar graph\n  geom_text(aes(label = round(n/sum(n),2)), vjust = -0.5)+ # to get the labels for each bar plot\n  labs(x = \"Boroughs\", \n       y = \"Percentage of airbnb\",\n       title = \"Stats of stays in various boroughs\") #to get the labels of axis and title of the graph\n```\n\n::: {.cell-output-display}\n![](challenge5_PriyaMarla_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nHave used bar graph to know the compare the stays in different neighbourhoods. From the above bar graph, we can see that there are 5 boroughs. Around 0.44% of the total airbnb's are located in Manhattan and least with 0.01% in Staten Island.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Classifying the neighbourhood_group column\nggplot(CountType, aes(x = \"\", y = perc, fill = room_type)) + #to plot the room_type and perc\n  geom_bar(stat = \"identity\", \n           color=\"black\") + #to fill the color of the edges and for self calculation\n  geom_text(aes(y = pie, label = label), \n            color = \"black\") + #to get the labels printed on the pie chart\n  coord_polar(\"y\", \n                start = 0, \n                direction = -1)+ #to draw the pie chart\n   theme_void()+ #to remove extras\n  labs(title = \"Percentage of Room_types\") #for the title of the graph\n```\n\n::: {.cell-output-display}\n![](challenge5_PriyaMarla_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nHave used pie chart to see what percent of room types are used as whole in the dataset. From the above graph, we can infer that there are 3 types of stays available i.e Entire home/apt, Private room and Shared room. There are very less i.e 2% stays provide shared room. Entire home/apt is provided by many stays (52%).\n\n\n## Bivariate Visualization(s)\nAny additional comments?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, \n       aes(x = neighbourhood_group, \n           fill = room_type)) + #plotting a graph for neighbourhood_group and its count \n  geom_bar(position = position_dodge(preserve = \"single\"))\n```\n\n::: {.cell-output-display}\n![](challenge5_PriyaMarla_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nHave used bar graph to show what distribution of room_types are being offered in various neighbourhood_groups. From th above graph it can inferred that Entire home/apt are mostly located in Manhattan borough, whereas maximum private rooms are offered in Brooklyn.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, \n       aes(y = factor(neighbourhood_group,\n                      labels = c(\"Bronx\",\n                                 \"Brooklyn\",\n                                 \"Manhattan\",\n                                 \"Quuens\",\n                                 \"Staten Island\")), \n           x = price, \n           color = neighbourhood_group)) + #setting the y axis, x axis, labels of y-axis and colors by axis\n  geom_jitter(alpha = 0.7,\n              size = 0.5) + #setting the size of the jitter\n  labs(title = \"Prices in various Boroughs\",\n       x = \"\",\n       y = \"\") + #setting the labels \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](challenge5_PriyaMarla_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nJittered plot is used instead of point plot to clearly show the price distribution in various neighbourhood groups. From the above Jittered plot we can see that the prices range anywhere from 0 to 10000. The maximum variation has been seen in Manhattan region. Brooklyn's price distribution is slightly similar to Manhattan. Staten Island and Bronx showed very less distribution compared to others.",
    "supporting": [
      "challenge5_PriyaMarla_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}