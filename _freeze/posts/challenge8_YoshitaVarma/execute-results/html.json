{
  "hash": "f13c94e9e9fbf7f07638eb1016645ec6",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Instructions\"\nauthor: \"Meredith Rolfe & Sean Conwya\"\ndescription: \"Joining Data\"\ndate: \"1/16/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_faostatcsv <- read_csv(\"_data/FAOSTAT_country_groups.csv\")\ncattle_faostatcsv <- read_csv(\"_data/FAOSTAT_cattle_dairy.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_faostatcsv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,943 × 7\n   `Country Group Code` `Country Group` Countr…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                  <dbl> <chr>              <dbl> <chr>   <chr>   <chr>   <chr>  \n 1                 5100 Africa                 4 Algeria 012     DZ      DZA    \n 2                 5100 Africa                 7 Angola  024     AO      AGO    \n 3                 5100 Africa                53 Benin   204     BJ      BEN    \n 4                 5100 Africa                20 Botswa… 072     BW      BWA    \n 5                 5100 Africa               233 Burkin… 854     BF      BFA    \n 6                 5100 Africa                29 Burundi 108     BI      BDI    \n 7                 5100 Africa                35 Cabo V… 132     CV      CPV    \n 8                 5100 Africa                32 Camero… 120     CM      CMR    \n 9                 5100 Africa                37 Centra… 140     CF      CAF    \n10                 5100 Africa                39 Chad    148     TD      TCD    \n# … with 1,933 more rows, and abbreviated variable names ¹​`Country Code`,\n#   ²​`M49 Code`, ³​`ISO2 Code`, ⁴​`ISO3 Code`\n```\n:::\n\n```{.r .cell-code}\nsummary(country_faostatcsv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Country Group Code Country Group       Country Code     Country         \n Min.   : 336       Length:1943        Min.   :  1.0   Length:1943       \n 1st Qu.:5200       Class :character   1st Qu.: 69.0   Class :character  \n Median :5403       Mode  :character   Median :136.0   Mode  :character  \n Mean   :5502                          Mean   :142.2                     \n 3rd Qu.:5848                          3rd Qu.:202.0                     \n Max.   :9011                          Max.   :622.0                     \n   M49 Code          ISO2 Code          ISO3 Code        \n Length:1943        Length:1943        Length:1943       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n```\n:::\n\n```{.r .cell-code}\ncattle_faostatcsv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36,449 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 36,439 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n\n```{.r .cell-code}\nsummary(cattle_faostatcsv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code          Area          \n Length:36449       Length:36449       Min.   :   1.0   Length:36449      \n Class :character   Class :character   1st Qu.:  69.0   Class :character  \n Mode  :character   Mode  :character   Median : 141.0   Mode  :character  \n                                       Mean   : 775.2                     \n                                       3rd Qu.: 215.0                     \n                                       Max.   :5504.0                     \n                                                                          \n  Element Code    Element            Item Code       Item          \n Min.   :5318   Length:36449       Min.   :882   Length:36449      \n 1st Qu.:5318   Class :character   1st Qu.:882   Class :character  \n Median :5420   Mode  :character   Median :882   Mode  :character  \n Mean   :5416                      Mean   :882                     \n 3rd Qu.:5510                      3rd Qu.:882                     \n Max.   :5510                      Max.   :882                     \n                                                                   \n   Year Code         Year          Unit               Value          \n Min.   :1961   Min.   :1961   Length:36449       Min.   :        7  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     7849  \n Median :1991   Median :1991   Mode  :character   Median :    43266  \n Mean   :1990   Mean   :1990                      Mean   :  4410235  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   700000  \n Max.   :2018   Max.   :2018                      Max.   :683217055  \n                                                  NA's   :74         \n     Flag           Flag Description  \n Length:36449       Length:36449      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n```\n:::\n:::\n\n\nI have chosen country faostat and cattle faostat data set. After reviewing the data set it explains that country faostat dataset is codebook for country. This dataset has all the information country level. After joining this dataset with cattle faostat dataset we can perform data analysis based on different groups. \n\nIn cattle dataset there is a lot of information about agriculture across the world. As you can see from the summary in element code there is information about milk, yield and production. Also, there is a common column in both the datasets country code and area code. We will be using this to join the data.\n\n\n## Tidy Data (as needed)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncattle_new <- rename (cattle_faostatcsv, \"Country Code\"= \"Area Code\" )\n\ncattle_new\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36,449 × 14\n   Domain Cod…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 36,439 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Country Code`, ³​`Element Code`, ⁴​`Item Code`,\n#   ⁵​`Year Code`\n```\n:::\n:::\n\n\n## Join Data\n\nAs the data is ready to join, we will use left_join to join the dataset using country code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_data <- left_join(cattle_new, country_faostatcsv, by = \"Country Code\" )\nfinal_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 257,061 × 20\n   Domain Cod…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 5 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 6 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 8 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 9 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n# … with 257,051 more rows, 10 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, `Country Group Code` <dbl>,\n#   `Country Group` <chr>, Country <chr>, `M49 Code` <chr>, `ISO2 Code` <chr>,\n#   `ISO3 Code` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Country Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_data_new <- rename (final_data, \"Country_Group\"= \"Country Group\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_data_new3 <- final_data_new%>%\n  filter(Year >= 1998) %>%\n  filter(`Country_Group`==\"Central Asia\") %>%\n  filter(`Unit` == \"tonnes\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_data_new3 %>%\n  ggplot(aes(x = Area, y = Value/100000, fill = Area)) +\n  geom_bar(stat = \"identity\") + \n  labs(x = \"Countries\", y = \"Different Agricultural Aspects\", title = \"Agricultural information across the world\",\n  fill = \"Element\")\n```\n\n::: {.cell-output-display}\n![](challenge8_YoshitaVarma_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(final_data_new3) +\n  geom_bar(aes(x = Area, fill= Element )) + \n  labs(x = \"Countries\", y = \"Different Agricultural Aspects\", title = \"Agricultural information across the world\",\n  fill = \"Element\")\n```\n\n::: {.cell-output-display}\n![](challenge8_YoshitaVarma_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge8_YoshitaVarma_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}