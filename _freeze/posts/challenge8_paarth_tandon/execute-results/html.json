{
  "hash": "558c4cf67e48b606f89d8987d7793884",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Paarth Tandon\"\ndescription: \"Joining Data\"\ndate: \"1/18/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n    df-print: kable\ncategories:\n  - challenge_8\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nactors <- read_csv('_data/snl_actors.csv')\ncasts <- read_csv('_data/snl_casts.csv')\nseasons <- read_csv('posts/_data/snl_seasons.csv')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'posts/_data/snl_seasons.csv' does not exist in current working directory ('/home/paarth/mega/grad/Winter 2023/DACSS601/601_Winter_2022-2023/posts').\n```\n:::\n\n```{.r .cell-code}\nhead(actors)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|aid            |url           |type  |gender  |\n|:--------------|:-------------|:-----|:-------|\n|Kate McKinnon  |/Cast/?KaMc   |cast  |female  |\n|Alex Moffat    |/Cast/?AlMo   |cast  |male    |\n|Ego Nwodim     |/Cast/?EgNw   |cast  |unknown |\n|Chris Redd     |/Cast/?ChRe   |cast  |male    |\n|Kenan Thompson |/Cast/?KeTh   |cast  |male    |\n|Carey Mulligan |/Guests/?3677 |guest |andy    |\n\n</div>\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(casts)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|aid              | sid|featured | first_epid| last_epid|update_anchor | n_episodes| season_fraction|\n|:----------------|---:|:--------|----------:|---------:|:-------------|----------:|---------------:|\n|A. Whitney Brown |  11|TRUE     |   19860222|        NA|FALSE         |          8|       0.4444444|\n|A. Whitney Brown |  12|TRUE     |         NA|        NA|FALSE         |         20|       1.0000000|\n|A. Whitney Brown |  13|TRUE     |         NA|        NA|FALSE         |         13|       1.0000000|\n|A. Whitney Brown |  14|TRUE     |         NA|        NA|FALSE         |         20|       1.0000000|\n|A. Whitney Brown |  15|TRUE     |         NA|        NA|FALSE         |         20|       1.0000000|\n|A. Whitney Brown |  16|TRUE     |         NA|        NA|FALSE         |         20|       1.0000000|\n\n</div>\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(seasons): object 'seasons' not found\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis dataset contains three tables about the actors and seasons of SNL, a late night comedy show (that I have never seen). The first table, actors, contains the name, gender, and cast type of each actor. The second table, casts, contains the relation between an actor and which seasons they appeared in. It also contains how many episodes of the season they were in, and some analygous information. The third table, seasons, contains information about the year, number of episodes, and episode ids of each season. Essentially, actor and seasons contains rows that represent one entity, and casts describes the relation between the two tables of entities.\n\n## Tidy Data (as needed)\n\nData does not need to be preprocessed.\n\n## Join Data\n\nIt seems like the only data we can really work with that involves joins would be gender. Originally, I wanted to consider the ratio of guests per season, but it seems as though there is no guest data in the casts table.\n\nBecause of this, I will answer the question: What is the ratio of males to non-males per year?\n\nFirst, let's join the tables together. Then I will group by the year and a new column I created, is_male. This column is true when the actor is a male and false otherwise. Then, I count how many episodes land in each column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngender_counts = actors %>%\n    left_join(casts, by = 'aid') %>%\n    left_join(seasons, by = 'sid') %>%\n    mutate(is_male = `gender` == 'male') %>%\n    select(sid, year, gender, is_male, n_episodes.x) %>%\n    group_by(`year`, `is_male`) %>%\n    summarise(ep_count = sum(n_episodes.x))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(y): object 'seasons' not found\n```\n:::\n\n```{.r .cell-code}\nhead(gender_counts, 10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(gender_counts, 10): object 'gender_counts' not found\n```\n:::\n:::\n\n\nNow, I need the total counts per year. The way I did it is way too overengineerd (reused my code) but it made it easier than re-doing everything. For a one-time calculation I don't think this is an issue.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseason_counts = actors %>%\n    left_join(casts, by = 'aid') %>%\n    left_join(seasons, by = 'sid') %>%\n    mutate(is_male = `gender` == 'male') %>%\n    select(sid, year, gender, is_male, n_episodes.x, n_episodes.y) %>%\n    group_by(`year`) %>%\n    summarise(ep_count = sum(n_episodes.x))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(y): object 'seasons' not found\n```\n:::\n\n```{.r .cell-code}\nhead(season_counts, 10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(season_counts, 10): object 'season_counts' not found\n```\n:::\n:::\n\n\nFinally, I calculate the ratio using both tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngender_ratio = gender_counts %>%\n    left_join(season_counts, by = 'year') %>%\n    mutate(ep_ratio = ep_count.x / ep_count.y)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in left_join(., season_counts, by = \"year\"): object 'gender_counts' not found\n```\n:::\n\n```{.r .cell-code}\nhead(gender_ratio, 10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(gender_ratio, 10): object 'gender_ratio' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gender_ratio, aes(x = `year`, y = `ep_ratio`, col = `is_male`)) +\n    geom_bar(position = \"stack\", stat = \"identity\") +\n    ggtitle('Ratio of Males to Non-Males on SNL') +\n    labs(x = 'Year', y = 'Ratio of Males to Non-Males', color = 'Is Male')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(gender_ratio, aes(x = year, y = ep_ratio, col = is_male)): object 'gender_ratio' not found\n```\n:::\n:::\n\n\nAs we can see, the disparity in gender is decreasing year on year. A stacked bar chart is probably a controversial choice here, but I think it helps visualize that the height of the plot is the whole cast. A line plot makes it seem like the empty space is no one or may cause other confusion. This is almost like a pie chart per year, which I like.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}