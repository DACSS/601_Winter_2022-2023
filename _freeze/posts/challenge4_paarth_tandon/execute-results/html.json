{
  "hash": "87574e0962f0898cba509de797b16206",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Paarth Tandon\"\ndescription: \"More data wrangling: mutate\"\ndate: \"01/04/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n    df-print: kable\ncategories:\n  - challenge_4\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# read in the data using readr\npoul <- read_csv(\"_data/poultry_tidy.csv\")\n# sample a few data points\npoul[sample(nrow(poul), 10), ]\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Product        | Year|Month     | Price_Dollar|\n|:--------------|----:|:---------|------------:|\n|B/S Breast     | 2004|September |       6.4250|\n|B/S Breast     | 2008|September |       6.4550|\n|Bone-in Breast | 2011|September |       3.9050|\n|B/S Breast     | 2012|February  |       7.0000|\n|Whole Legs     | 2010|December  |       2.0350|\n|Bone-in Breast | 2011|February  |       3.9050|\n|Thighs         | 2013|January   |       2.1625|\n|Whole          | 2011|August    |       2.3500|\n|Whole          | 2008|March     |       2.2050|\n|B/S Breast     | 2013|December  |       7.0375|\n\n</div>\n:::\n\n```{.r .cell-code}\n# products\ntable(select(poul, Product))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nProduct\n    B/S Breast Bone-in Breast         Thighs          Whole     Whole Legs \n           120            120            120            120            120 \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis dataset describes the `Price <dbl>` of poultry meat given the `Product <chr>`, `Year <dbl>`, and `Month <dbl>`. We can see that there are 5 types of meat.\n\n## Tidy Data (as needed)\n\nThere is no work to be done as the data is already very tidy.\n\n## Identify variables that need to be mutated\n\nThe `Product` category can be mutated into a `<dbl>` so that we can work with numbers instead of strings. The `Month` category should also be mutated into `<dbl>`, in case we wanted to do something like a one month ahead comparison (of course we would need to implement some sort of rollover function for the new year).\n\nI will also create a `Date` column based on the `Month` and `Year`, as it will make plotting over time simpler.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n\n# product ids\npoul_mut <- mutate(poul, Product_ID = recode(Product, \"B/S Breast\" = 1, \"Bone-in Breast\" = 2, \"Thighs\" = 3, \"Whole\" = 4, \"Whole Legs\" = 5))\n\n# month number\npoul_mut <- mutate(poul_mut, Month_num = recode(Month, \"January\" = 1, \"February\" = 2, \"March\" = 3, \"April\" = 4, \"May\" = 5, \"June\" = 6, \"July\" = 7, \"August\" = 8, \"September\" = 9, \"October\" = 10, \"November\" = 11, \"December\" = 12))\n\n# date\npoul_mut <- mutate(poul_mut, Date=make_date(Year, Month_num))\n\npoul_mut[sample(nrow(poul_mut), 10), ]\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Product        | Year|Month     | Price_Dollar| Product_ID| Month_num|Date       |\n|:--------------|----:|:---------|------------:|----------:|---------:|:----------|\n|B/S Breast     | 2004|September |       6.4250|          1|         9|2004-09-01 |\n|B/S Breast     | 2008|September |       6.4550|          1|         9|2008-09-01 |\n|Bone-in Breast | 2011|September |       3.9050|          2|         9|2011-09-01 |\n|B/S Breast     | 2012|February  |       7.0000|          1|         2|2012-02-01 |\n|Whole Legs     | 2010|December  |       2.0350|          5|        12|2010-12-01 |\n|Bone-in Breast | 2011|February  |       3.9050|          2|         2|2011-02-01 |\n|Thighs         | 2013|January   |       2.1625|          3|         1|2013-01-01 |\n|Whole          | 2011|August    |       2.3500|          4|         8|2011-08-01 |\n|Whole          | 2008|March     |       2.2050|          4|         3|2008-03-01 |\n|B/S Breast     | 2013|December  |       7.0375|          1|        12|2013-12-01 |\n\n</div>\n:::\n:::\n\n\nOne comment to make is that since `<date>` requires a specific day (not just a month,year combo) it extrapolates that the date is the first of the month. This should be fine for most month-to-month visualizations, but should be noted as technically incorrect.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}