{
  "hash": "1c16025c681342a41ed091d8c719047b",
  "result": {
    "markdown": "---\ntitle: \"Challenge9_MarcelaRobinson\"\nauthor: \"Marcela Robinson\"\neditor: visual\ndate: January 25, 2023\ndescription: \"Creating a function\"\ncategories:\n- challenge9\n- writing_functions\n- descriptive_statistics\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mmrobinson/Desktop/Github/601_Winter_2022-2023\n```\n:::\n:::\n\n\n## Create a function \n\n::: {.cell}\n\n```{.r .cell-code}\n#Create a function to obtain descriptive statistics\ndescrip_statistics<-function(x){\n  st_mean <- mean(x, na.rm = TRUE)\n  st_median <- median(x, na.rm = TRUE)\n  st_sd <- sd(x, na.rm = TRUE)\n  st_min <- min(x, na.rm = TRUE)\n  st_max <- max(x, na.rm = TRUE)\n  st_range <- range(x, na.rm = TRUE)\n  st_var <- var(x, na.rm = TRUE)\n  return(list(mean=st_mean, median=st_median, sd = st_sd, min = st_min, max = st_max, range = st_range, var = st_var))\n}\n```\n:::\n\n\n## Test my function\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read in a dataset\ntestdf<- here(\"posts\", \"_data\", \"AB_NYC_2019.csv\")%>%\n  read_csv\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 48895 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#test my function\ndescrip_statistics(testdf$price)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mean\n[1] 152.7207\n\n$median\n[1] 106\n\n$sd\n[1] 240.1542\n\n$min\n[1] 0\n\n$max\n[1] 10000\n\n$range\n[1]     0 10000\n\n$var\n[1] 57674.03\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}