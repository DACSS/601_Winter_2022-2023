{
  "hash": "ac2183d1c6678536c27de554c0fda48a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Priya Marla\"\ndescription: \"More data wrangling: mutate\"\ndate: \"01/12/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.csv⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- read_csv(\"_data/hotel_bookings.csv\") #reading the data from csv file\ndataset\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n\n```{.r .cell-code}\ndim(dataset) #to get the number of rows and columns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n\n```{.r .cell-code}\nunique(dataset$hotel) #to get the unique rows in hotel column\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n:::\n\n\n### Briefly describe the data\nThis dataset describes the information of the reservations made in Resort Hotel and City Hotel. There are 119390 rows and 32 columns. Each columns represents various data such as for what dates and what hotel the booking was made, whether reservation is called or not and if the payment is made or not etc.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThe data needs to be cleaned. The date is spread across in multiple columns. If is there in a single column it;'ll will be easy to calculate stats. Can also calculate the date with lead time and date of arrival columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(dataset, 3:7 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 5\n   lead_time arrival_date_year arrival_date_month arrival_date_week_nu…¹ arriv…²\n       <dbl>             <dbl> <chr>                               <dbl>   <dbl>\n 1       342              2015 July                                   27       1\n 2       737              2015 July                                   27       1\n 3         7              2015 July                                   27       1\n 4        13              2015 July                                   27       1\n 5        14              2015 July                                   27       1\n 6        14              2015 July                                   27       1\n 7         0              2015 July                                   27       1\n 8         9              2015 July                                   27       1\n 9        85              2015 July                                   27       1\n10        75              2015 July                                   27       1\n# … with 119,380 more rows, and abbreviated variable names\n#   ¹​arrival_date_week_number, ²​arrival_date_day_of_month\n```\n:::\n:::\n\n\nAny additional comments?\n\n## Identify variables that need to be mutated\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\nThe country column is placed in the 14th place, it should be moved up to 2nd place i.e after the hotel column. Created a new column arrival_date by getting the date from \"arrival_date_day_of_month\", \"arrival_date_month\",\"arrival_date_year\" columns. Removing these 3 columns and moving the arrival date column to column after \"lead_time\". \nCreating the new column booking_date to know the date of booking with the information from columns lead_time and arrival_date.\nAfter tidying up the data, total columns remaining are 29\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#tidying the dataset\ntidy_data <- dataset %>%\n  relocate(\"country\",.after = \"hotel\") %>% #relocating the country column\n  mutate(arrival_date = (str_c(arrival_date_day_of_month,arrival_date_month,arrival_date_year, sep = \"/\")), arrival_date = dmy(arrival_date), .after = lead_time) %>% #variable for arrival date\n  mutate(booking_date = arrival_date-days(lead_time), .after = lead_time) %>% #variable to know the date of booking\n  select(-\"lead_time\")\ntidy_data <- tidy_data[,-6:-9] #removed columns with arrival date information\ntidy_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 29\n   hotel    country is_ca…¹ booking_…² arrival_…³ stays…⁴ stays…⁵ adults child…⁶\n   <chr>    <chr>     <dbl> <date>     <date>       <dbl>   <dbl>  <dbl>   <dbl>\n 1 Resort … PRT           0 2014-07-24 2015-07-01       0       0      2       0\n 2 Resort … PRT           0 2013-06-24 2015-07-01       0       0      2       0\n 3 Resort … GBR           0 2015-06-24 2015-07-01       0       1      1       0\n 4 Resort … GBR           0 2015-06-18 2015-07-01       0       1      1       0\n 5 Resort … GBR           0 2015-06-17 2015-07-01       0       2      2       0\n 6 Resort … GBR           0 2015-06-17 2015-07-01       0       2      2       0\n 7 Resort … PRT           0 2015-07-01 2015-07-01       0       2      2       0\n 8 Resort … PRT           0 2015-06-22 2015-07-01       0       2      2       0\n 9 Resort … PRT           1 2015-04-07 2015-07-01       0       3      2       0\n10 Resort … PRT           1 2015-04-17 2015-07-01       0       3      2       0\n# … with 119,380 more rows, 20 more variables: babies <dbl>, meal <chr>,\n#   market_segment <chr>, distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n:::\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}