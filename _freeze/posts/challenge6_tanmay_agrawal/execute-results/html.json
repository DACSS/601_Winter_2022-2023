{
  "hash": "f0fd667195b8ee49cb1bfc93f6b5de17",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6 Submission\"\nauthor: \"Tanmay Agrawal\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"1/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n    df-print: paged\ncategories:\n  - challenge_6\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - debt  ⭐\n  - fed_rate ⭐⭐\n  - abc_poll ⭐⭐⭐\n  - usa_hh ⭐⭐⭐\n  - hotel_bookings ⭐⭐⭐⭐\n  - air_bnb  ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read_csv(\"_data/hotel_bookings.csv\")\n\n# We inspect the columns in this dataset using the head command\nhead(data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"hotel\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"is_canceled\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"lead_time\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_year\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_month\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"arrival_date_week_number\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_day_of_month\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"stays_in_weekend_nights\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"stays_in_week_nights\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"adults\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"children\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"babies\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meal\"],\"name\":[13],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[14],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"market_segment\"],\"name\":[15],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"distribution_channel\"],\"name\":[16],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"is_repeated_guest\"],\"name\":[17],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"previous_cancellations\"],\"name\":[18],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"previous_bookings_not_canceled\"],\"name\":[19],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"reserved_room_type\"],\"name\":[20],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"assigned_room_type\"],\"name\":[21],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"booking_changes\"],\"name\":[22],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"deposit_type\"],\"name\":[23],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"agent\"],\"name\":[24],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"company\"],\"name\":[25],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"days_in_waiting_list\"],\"name\":[26],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"customer_type\"],\"name\":[27],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"adr\"],\"name\":[28],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"required_car_parking_spaces\"],\"name\":[29],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_of_special_requests\"],\"name\":[30],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"reservation_status\"],\"name\":[31],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"reservation_status_date\"],\"name\":[32],\"type\":[\"date\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"342\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"2\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"PRT\",\"15\":\"Direct\",\"16\":\"Direct\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"C\",\"21\":\"C\",\"22\":\"3\",\"23\":\"No Deposit\",\"24\":\"NULL\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"0\",\"29\":\"0\",\"30\":\"0\",\"31\":\"Check-Out\",\"32\":\"2015-07-01\"},{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"737\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"0\",\"10\":\"2\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"PRT\",\"15\":\"Direct\",\"16\":\"Direct\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"C\",\"21\":\"C\",\"22\":\"4\",\"23\":\"No Deposit\",\"24\":\"NULL\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"0\",\"29\":\"0\",\"30\":\"0\",\"31\":\"Check-Out\",\"32\":\"2015-07-01\"},{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"7\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"1\",\"10\":\"1\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"GBR\",\"15\":\"Direct\",\"16\":\"Direct\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"A\",\"21\":\"C\",\"22\":\"0\",\"23\":\"No Deposit\",\"24\":\"NULL\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"75\",\"29\":\"0\",\"30\":\"0\",\"31\":\"Check-Out\",\"32\":\"2015-07-02\"},{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"13\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"1\",\"10\":\"1\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"GBR\",\"15\":\"Corporate\",\"16\":\"Corporate\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"A\",\"21\":\"A\",\"22\":\"0\",\"23\":\"No Deposit\",\"24\":\"304\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"75\",\"29\":\"0\",\"30\":\"0\",\"31\":\"Check-Out\",\"32\":\"2015-07-02\"},{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"14\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"2\",\"10\":\"2\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"GBR\",\"15\":\"Online TA\",\"16\":\"TA/TO\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"A\",\"21\":\"A\",\"22\":\"0\",\"23\":\"No Deposit\",\"24\":\"240\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"98\",\"29\":\"0\",\"30\":\"1\",\"31\":\"Check-Out\",\"32\":\"2015-07-03\"},{\"1\":\"Resort Hotel\",\"2\":\"0\",\"3\":\"14\",\"4\":\"2015\",\"5\":\"July\",\"6\":\"27\",\"7\":\"1\",\"8\":\"0\",\"9\":\"2\",\"10\":\"2\",\"11\":\"0\",\"12\":\"0\",\"13\":\"BB\",\"14\":\"GBR\",\"15\":\"Online TA\",\"16\":\"TA/TO\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"A\",\"21\":\"A\",\"22\":\"0\",\"23\":\"No Deposit\",\"24\":\"240\",\"25\":\"NULL\",\"26\":\"0\",\"27\":\"Transient\",\"28\":\"98\",\"29\":\"0\",\"30\":\"1\",\"31\":\"Check-Out\",\"32\":\"2015-07-03\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Briefly describe the data\n\nThe dataset contains booking information for hotels, and includes information such as the time of booking, length of stay, the number of guests, cancellations, etc.\n\n## Tidy Data (as needed)\n\nWe look at the first few rows of the data to get a visual outline of the dataset and we observe that columns `agent`, `company` and `country` have a lot of `NULL` values. We can use the following to get a column-wise representation of all the garbage values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  summarize_all(list(~ sum(is.na(.))))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"hotel\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"is_canceled\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"lead_time\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_year\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_month\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_week_number\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"arrival_date_day_of_month\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"stays_in_weekend_nights\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"stays_in_week_nights\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"adults\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"children\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"babies\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"meal\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"market_segment\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"distribution_channel\"],\"name\":[16],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"is_repeated_guest\"],\"name\":[17],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"previous_cancellations\"],\"name\":[18],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"previous_bookings_not_canceled\"],\"name\":[19],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"reserved_room_type\"],\"name\":[20],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"assigned_room_type\"],\"name\":[21],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"booking_changes\"],\"name\":[22],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"deposit_type\"],\"name\":[23],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"agent\"],\"name\":[24],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"company\"],\"name\":[25],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"days_in_waiting_list\"],\"name\":[26],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"customer_type\"],\"name\":[27],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"adr\"],\"name\":[28],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"required_car_parking_spaces\"],\"name\":[29],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"total_of_special_requests\"],\"name\":[30],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"reservation_status\"],\"name\":[31],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"reservation_status_date\"],\"name\":[32],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"4\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\",\"29\":\"0\",\"30\":\"0\",\"31\":\"0\",\"32\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# we use the stringr package for this\nlibrary(stringr)\n\n# get the null percentages\nnull_percentages <- sapply(data, function(x) sum(str_detect(x, \"NULL\"))/length(x))\n\n# put it into a tibble and arrange it\n\nnull_percentages_tibble <- tibble(column = names(data), null_percentage = null_percentages)\nnull_percentages_tibble %>%\n  arrange(desc(null_percentage))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"column\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"null_percentage\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"company\",\"2\":\"0.943068934\"},{\"1\":\"agent\",\"2\":\"0.136862384\"},{\"1\":\"country\",\"2\":\"0.004087445\"},{\"1\":\"hotel\",\"2\":\"0.000000000\"},{\"1\":\"is_canceled\",\"2\":\"0.000000000\"},{\"1\":\"lead_time\",\"2\":\"0.000000000\"},{\"1\":\"arrival_date_year\",\"2\":\"0.000000000\"},{\"1\":\"arrival_date_month\",\"2\":\"0.000000000\"},{\"1\":\"arrival_date_week_number\",\"2\":\"0.000000000\"},{\"1\":\"arrival_date_day_of_month\",\"2\":\"0.000000000\"},{\"1\":\"stays_in_weekend_nights\",\"2\":\"0.000000000\"},{\"1\":\"stays_in_week_nights\",\"2\":\"0.000000000\"},{\"1\":\"adults\",\"2\":\"0.000000000\"},{\"1\":\"babies\",\"2\":\"0.000000000\"},{\"1\":\"meal\",\"2\":\"0.000000000\"},{\"1\":\"market_segment\",\"2\":\"0.000000000\"},{\"1\":\"distribution_channel\",\"2\":\"0.000000000\"},{\"1\":\"is_repeated_guest\",\"2\":\"0.000000000\"},{\"1\":\"previous_cancellations\",\"2\":\"0.000000000\"},{\"1\":\"previous_bookings_not_canceled\",\"2\":\"0.000000000\"},{\"1\":\"reserved_room_type\",\"2\":\"0.000000000\"},{\"1\":\"assigned_room_type\",\"2\":\"0.000000000\"},{\"1\":\"booking_changes\",\"2\":\"0.000000000\"},{\"1\":\"deposit_type\",\"2\":\"0.000000000\"},{\"1\":\"days_in_waiting_list\",\"2\":\"0.000000000\"},{\"1\":\"customer_type\",\"2\":\"0.000000000\"},{\"1\":\"adr\",\"2\":\"0.000000000\"},{\"1\":\"required_car_parking_spaces\",\"2\":\"0.000000000\"},{\"1\":\"total_of_special_requests\",\"2\":\"0.000000000\"},{\"1\":\"reservation_status\",\"2\":\"0.000000000\"},{\"1\":\"reservation_status_date\",\"2\":\"0.000000000\"},{\"1\":\"children\",\"2\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\nYes, I wish to plot the price of a room per night per person over the course of a year. I will first need to clean the data a little more, this would involve getting rid of garbage values, negative values, zeroes, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreplace_garbage <- c(country = \"Unknown\", agent = 0, company = 0)\n\n# find indices that have `na`\nna_indices <- which(is.na(data$children))\ndata$children[na_indices] <- 0.0\n\n# Use a for loop to replace missing values in each column\nfor (col in names(replace_garbage)) {\n  data[data[,col] == \"NULL\", col] <- replace_garbage[col]\n}\n\n# club the undefined meals with SC based on information about the dataset\ndata$meal <- replace(data$meal, data$meal == \"Undefined\", \"SC\")\n\n# separate data by Hotel Type:\nresort_hotel <- data %>% filter(hotel == \"Resort Hotel\" & is_canceled == 0)\ncity_hotel <- data %>% filter(hotel == \"City Hotel\" & is_canceled == 0)\n\n# calculate room price per person\ndata <- data %>% filter(adults != 0 | children != 0 | babies != 0)\ndata <- data %>% filter(adr>0)\ndata$adr_norm <- data$adr / (data$adults + data$children)\ndata_uncancelled <- data[data$is_canceled == 0, ] # the ones didn't cancel\nroom_prices <- data_uncancelled[, c(\"hotel\", \"reserved_room_type\", \"adr_norm\")][order(data_uncancelled$reserved_room_type), ]\n```\n:::\n\n\n## Time Dependent Visualization\n\nI am using a line plot with ribbons around them and grouping them by `hotel` (Hotel Type). A line plot conveys all the information about evolution of a quantity like `adr` (Average daily rate) over the course of a year. I convert the `adr` to a normalized version where we get one quantity that's the mean price of that month per person across all the years. I also use ribbons to show the standard deviation of that price since mean is an aggressive aggregating function and loses a lot of information about the true trend if used in isolation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# grab data:\nroom_prices_monthly <- data_uncancelled[c(\"hotel\", \"arrival_date_month\", \"adr_norm\")][order(data_uncancelled$arrival_date_month),]\n\n# order by month:\nmonths <- c(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\n\nroom_prices_monthly$arrival_date_month <- factor(room_prices_monthly$arrival_date_month, levels=months, ordered=TRUE)\n\n\nroom_prices_monthly_agg <- room_prices_monthly %>%\n  group_by(hotel, arrival_date_month) %>%\n  summarise(adr_norm = mean(adr_norm))\n\nggplot(data = room_prices_monthly_agg, aes(x = arrival_date_month, y = adr_norm, color = `hotel`, group = `hotel`)) + \n  geom_line() + \n  geom_point() +\n  geom_ribbon(aes(ymin = adr_norm - sd(adr_norm), ymax = adr_norm + sd(adr_norm)), alpha = 0.2) +\n  ggtitle(\"Room price per night and person over the year\", subtitle = \"With standard deviation\") +\n  xlab(\"Month\") + \n  ylab(\"Price [EUR]\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(size = 16), \n        axis.text = element_text(size = 16),\n        axis.title = element_text(size = 16))\n```\n\n::: {.cell-output-display}\n![](challenge6_tanmay_agrawal_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAn interesting observation is that resorts tend to be expensive over the summers while hotels tend to be cheaper. This also makes sense intuitively.\n\n## Visualizing Part-Whole Relationships\n\nA stacked bar-plot is an effective way to show the part-whole relationship of the two categories of hotels. We just stack them and color them grouped by `hotel`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroom_prices_monthly_agg <- room_prices_monthly %>%\n  group_by(hotel, arrival_date_month) %>%\n  summarise(adr_norm = mean(adr_norm))\n\nggplot(data = room_prices_monthly, aes(x = arrival_date_month, y = adr_norm, fill = hotel)) + \n  geom_col() + \n  xlab(\"Month\") + \n  ylab(\"Price [EUR]\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(size = 16), \n        axis.text = element_text(size = 16),\n        axis.title = element_text(size = 16))\n```\n\n::: {.cell-output-display}\n![](challenge6_tanmay_agrawal_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::",
    "supporting": [
      "challenge6_tanmay_agrawal_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}