{
  "hash": "5b03778e658c7684a1b7c2a25c4bb143",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Priya Marla\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"1/19/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - hotel_bookings\n  - air_bnb\n  - fed_rate\n  - debt\n  - usa_hh\n  - abc_poll\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(tseries)\nlibrary(here)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - debt  ⭐\n  - fed_rate ⭐⭐\n  - abc_poll ⭐⭐⭐\n  - usa_hh ⭐⭐⭐\n  - hotel_bookings ⭐⭐⭐⭐\n  - air_bnb  ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- here(\"posts\",\"_data\",\"USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\") %>%\nread_excel(skip=5, n_max = 351,\n           col_names = c(\"Year\", \"Population\", \"del\",\"Income_1\", \"Income_2\", \"Income_3\", \"Income_4\",\"Income_5\",\"Income_6\",\"Income_7\",\"Income_8\",\"Income_9\",\"Median_Income\", \"Median_error\",\"Mean_Income\", \"Mean_error\"))\ndataset\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 351 × 16\n   Year    Popul…¹   del Incom…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸\n   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… <NA>       NA    NA      NA      NA      NA      NA      NA      NA  \n 2 2019    128451    100     9.1     8       8.3    11.7    16.5    12.3    15.5\n 3 2018    128579    100    10.1     8.8     8.7    12      17      12.5    15  \n 4 2017 2  127669    100    10       9.1     9.2    12      16.4    12.4    14.7\n 5 2017    127586    100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 6 2016    126224    100    10.4     9       9.2    12.3    16.7    12.2    15  \n 7 2015    125819    100    10.6    10       9.6    12.1    16.1    12.4    14.9\n 8 2014    124587    100    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 9 2013 3  123931    100    11.4    10.3     9.5    12.5    16.8    12      13.9\n10 2013 4  122952    100    11.3    10.4     9.7    13.1    17      12.5    13.6\n# … with 341 more rows, 6 more variables: Income_8 <dbl>, Income_9 <dbl>,\n#   Median_Income <dbl>, Median_error <dbl>, Mean_Income <chr>,\n#   Mean_error <chr>, and abbreviated variable names ¹​Population, ²​Income_1,\n#   ³​Income_2, ⁴​Income_3, ⁵​Income_4, ⁶​Income_5, ⁷​Income_6, ⁸​Income_7\n```\n:::\n:::\n\n\n### Briefly describe the data\nThis dataset describes the income statistics of various races over the years. The data shows what percentage of people fall under each income category i.e ranging from under $15,000 to $200,000 per year. The mean and median of the income is also calculated in the columns 13 and 15. The statistics are calculated all races combine and also separate for different races.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThere are few unnecessary columns in the data like Total, which has to be deleted. A new column which represents the race has to mutated to the data. Superscripts have to be removed from the year column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhousehold <- dataset %>%\n  mutate(Race = case_when(is.na(Population) ~ Year), .before = Year) %>% #Created a new column race\n  fill(Race, .direction = \"down\") %>% #filled the value in the race column\n  separate(Year, into=c(\"Year\", \"del\"), sep=\" \")%>% #Removing the extra characters in the Year column\n  select(!contains(\"del\")) %>% #deleting unecessary columns\n  drop_na() #dropping null values if any\n\nhousehold$Race <- gsub('[0-9]+', '', household$Race) #Removing extra characters in the Race column\n\nhousehold\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 339 × 16\n   Race    Year  Popul…¹ Incom…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸\n   <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA… 2018  128579     10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA… 2017  127669     10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA… 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA… 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA… 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA… 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA… 2013  123931     11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA… 2013  122952     11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA… 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 329 more rows, 6 more variables: Income_8 <dbl>, Income_9 <dbl>,\n#   Median_Income <dbl>, Median_error <dbl>, Mean_Income <chr>,\n#   Mean_error <chr>, and abbreviated variable names ¹​Population, ²​Income_1,\n#   ³​Income_2, ⁴​Income_3, ⁵​Income_4, ⁶​Income_5, ⁷​Income_6, ⁸​Income_7\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nAdded a new column race while tidying up the data, which is useful for facet_wrap function to plot different graphs on basis of the values in the Race column.\nConverting the all the columns to numeric for ease during plotting the graphs. Converted the Year column to date format\n\nDocument your work here.\n\n::: {.cell}\n\n```{.r .cell-code}\n#Converting all the columns except Race and Year to numeric for better \nfor (i in names(household)){\n  if (i == \"Race\"){\n    next\n  }\n  else if (i == \"Year\"){\n    next\n  }\n  else{\n    household[i] <- sapply(household[i],as.numeric)\n  }\n}\n\n#converting year to date format\nhousehold$Year <- as.Date(as.character(household$Year), format = \"%Y\") \n\nclass(household$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Date\"\n```\n:::\n\n```{.r .cell-code}\nclass(household$Mean_Income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n\n\n## Time Dependent Visualization\n\nBy plotting the Mean_income of various races over the time (years), we can see that there is an increasing trend of the mean over the years and so is the Median. \nThe Mean income ranged between $30,000 to $120,000 whereas median ranged between $50,000 to $100,000.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mean Income\nggplot(data = household, aes(Year, Mean_Income)) +\n  geom_line(color=\"violet\") +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(title = \"Plots for Mean Income of different race over the years\") +\n  facet_wrap(~ Race) +\n  theme(\n  strip.text = element_text(size = 6),\n  panel.grid.minor = element_blank(),               #removes minor grid lines\n  panel.grid.major = element_blank())\n```\n\n::: {.cell-output-display}\n![](challenge6_PriyaMarla_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Median Income\nggplot(data = household, aes(Year, Median_Income)) +\n  geom_line(color=\"red\") +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(title = \"Plots for Median Income of different race over the years\") +\n  facet_wrap(~ Race) +\n  theme(\n  strip.text = element_text(size = 6),\n  panel.grid.minor = element_blank(),               #removes minor grid lines\n  panel.grid.major = element_blank())\n```\n\n::: {.cell-output-display}\n![](challenge6_PriyaMarla_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n## Visualizing Part-Whole Relationships\n\nIn the below comparison graph of mean and median income of various races over the years, we ca refer that the asian community has logged the highest mean and median income. Least income is registered by the black community. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mean_income Plot\nggplot(data = household, aes(x = Year, y = Mean_Income, col = Race)) +\n  geom_line()+\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(title = \"Comparison of Mean Income of all races over the year\")\n```\n\n::: {.cell-output-display}\n![](challenge6_PriyaMarla_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Median_income Plot\nggplot(data = household, aes(x = Year, y = Median_Income, col = Race)) +\n  geom_line()+\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(title = \"Comparison of Median Income of all races over the year\")\n```\n\n::: {.cell-output-display}\n![](challenge6_PriyaMarla_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge6_PriyaMarla_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}