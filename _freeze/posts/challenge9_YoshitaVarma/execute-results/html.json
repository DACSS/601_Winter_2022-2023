{
  "hash": "1017c3e5edd286400ce907ec65ecefd9",
  "result": {
    "markdown": "---\ntitle: \"Challenge 9 Yoshita Varma\"\nauthor: \"Yoshita Varma\"\ndescription: \"Creating a function\"\ndate: \"1/27/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_9\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is simple. Create a function, and use it to perform a data analysis / cleaning / visualization task:\n\nExamples of such functions are:\n1) A function that reads in and cleans a dataset.  \n2) A function that computes summary statistics (e.g., computes the z score for a variable).  \n3) A function that plots a histogram.  \n\nThat's it!\n\n## A function that reads in and cleans a dataset. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunc_read_clean <- function(x) {\n  data <- read_csv(x)\n  data <- data %>% select_if(~ !any(is.na(.)))\n  return(data)\n} \n```\n:::\n\n\nReading hotel booking data as I am familiar with it. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_booking <- func_read_clean(\"_data/hotel_bookings.csv\")\nhotel_booking\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 31\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 21 more variables: babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n\n\n## A function that computes summary statistics (e.g., computes the z score for a variable).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatistics <- function(x){\n  stat <- tibble(\n    mean=mean(x),\n    median=median(x),\n    sd=sd(x)\n  )\n  return(stat)\n}\nstatistics(hotel_booking$stays_in_week_nights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n   mean median    sd\n  <dbl>  <dbl> <dbl>\n1  2.50      2  1.91\n```\n:::\n:::\n\nPrinting stats of stays_in_week_nights.\n\n## A function that plots a histogram.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogram <- function(data_read){\n  HotelBookings_csv_mutate <- data_read %>% \n  mutate(arrival_date = str_c(arrival_date_year, \n                              arrival_date_month, arrival_date_day_of_month, sep=\"/\"),\n         arrival_date = lubridate::ymd(arrival_date)) %>% \n  select(-c(arrival_date_year,arrival_date_month, arrival_date_day_of_month))\n\n  \nggplot(HotelBookings_csv_mutate, aes(x=arrival_date, y= stays_in_week_nights, color = `hotel`)) + \n  geom_line() + \n  xlab(\"Year\") + \n  ylab(\"Number of days stay during week\") + \n  ggtitle(\"Year vs Stays_in_week_nights\")\n}\n\nhistogram(hotel_booking)\n```\n\n::: {.cell-output-display}\n![](challenge9_YoshitaVarma_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThis shows some might book a hotel instead of renting a place. One common thing observed is the spike in the start of the year.\n\n\n",
    "supporting": [
      "challenge9_YoshitaVarma_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}