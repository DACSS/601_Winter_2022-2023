{
  "hash": "212fbabd8bb73f8f1ae748a808f4fe1e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Marcela Robinson\"\nauthor: \"Marcela Robinson\"\neditor: visual\ndf-print: paged\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n##Read the file \"\\_data/AB_NYC_2019.csv\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nListings<-read_csv(\"_data/AB_NYC_2019.csv\")%>%\n           rename(borough = neighbourhood_group, neighborhood = neighbourhood) %>% \n  select(-c(contains(\"host\"),last_review, reviews_per_month))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 48895 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(Listings)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"borough\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"neighborhood\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"latitude\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"longitude\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"room_type\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"price\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"minimum_nights\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"number_of_reviews\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"availability_365\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2539\",\"2\":\"Clean & quiet apt home by the park\",\"3\":\"Brooklyn\",\"4\":\"Kensington\",\"5\":\"40.64749\",\"6\":\"-73.97237\",\"7\":\"Private room\",\"8\":\"149\",\"9\":\"1\",\"10\":\"9\",\"11\":\"365\"},{\"1\":\"2595\",\"2\":\"Skylit Midtown Castle\",\"3\":\"Manhattan\",\"4\":\"Midtown\",\"5\":\"40.75362\",\"6\":\"-73.98377\",\"7\":\"Entire home/apt\",\"8\":\"225\",\"9\":\"1\",\"10\":\"45\",\"11\":\"355\"},{\"1\":\"3647\",\"2\":\"THE VILLAGE OF HARLEM....NEW YORK !\",\"3\":\"Manhattan\",\"4\":\"Harlem\",\"5\":\"40.80902\",\"6\":\"-73.94190\",\"7\":\"Private room\",\"8\":\"150\",\"9\":\"3\",\"10\":\"0\",\"11\":\"365\"},{\"1\":\"3831\",\"2\":\"Cozy Entire Floor of Brownstone\",\"3\":\"Brooklyn\",\"4\":\"Clinton Hill\",\"5\":\"40.68514\",\"6\":\"-73.95976\",\"7\":\"Entire home/apt\",\"8\":\"89\",\"9\":\"1\",\"10\":\"270\",\"11\":\"194\"},{\"1\":\"5022\",\"2\":\"Entire Apt: Spacious Studio/Loft by central park\",\"3\":\"Manhattan\",\"4\":\"East Harlem\",\"5\":\"40.79851\",\"6\":\"-73.94399\",\"7\":\"Entire home/apt\",\"8\":\"80\",\"9\":\"10\",\"10\":\"9\",\"11\":\"0\"},{\"1\":\"5099\",\"2\":\"Large Cozy 1 BR Apartment In Midtown East\",\"3\":\"Manhattan\",\"4\":\"Murray Hill\",\"5\":\"40.74767\",\"6\":\"-73.97500\",\"7\":\"Entire home/apt\",\"8\":\"200\",\"9\":\"3\",\"10\":\"74\",\"11\":\"129\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThe dataset contains listing information for Airbnb properties in New York. It has 48895 observances (listings) and 16 variables. The variables include the location of the property (coordinates, neighborhood, and borough), room type, price, minimum number of nights, reviews (total reviews and reviews per month), host information (id, name, listing counts per host), and availability.\n\nTidy Data\n\nIn order to tidy the data, I first removed the variables that I consider unnecessary: host_id, host_name, last_review, and reviews per month. I also renamed the variables neighbourhood_group to borough and neighbourhood to neighborhood since these are more commonly used terms in the US. My next step is to determine if there is any missing data from this dataset.\n\n##Determine is there is any missing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(Listings))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               id              name           borough      neighborhood \n                0                16                 0                 0 \n         latitude         longitude         room_type             price \n                0                 0                 0                 0 \n   minimum_nights number_of_reviews  availability_365 \n                0                 0                 0 \n```\n:::\n:::\n\n\nThere are 16 names missing from the dataset.\n\n##Summary of the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(Listings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name             borough          neighborhood      \n Min.   :    2539   Length:48895       Length:48895       Length:48895      \n 1st Qu.: 9471945   Class :character   Class :character   Class :character  \n Median :19677284   Mode  :character   Mode  :character   Mode  :character  \n Mean   :19017143                                                           \n 3rd Qu.:29152178                                                           \n Max.   :36487245                                                           \n    latitude       longitude       room_type             price        \n Min.   :40.50   Min.   :-74.24   Length:48895       Min.   :    0.0  \n 1st Qu.:40.69   1st Qu.:-73.98   Class :character   1st Qu.:   69.0  \n Median :40.72   Median :-73.96   Mode  :character   Median :  106.0  \n Mean   :40.73   Mean   :-73.95                      Mean   :  152.7  \n 3rd Qu.:40.76   3rd Qu.:-73.94                      3rd Qu.:  175.0  \n Max.   :40.91   Max.   :-73.71                      Max.   :10000.0  \n minimum_nights    number_of_reviews availability_365\n Min.   :   1.00   Min.   :  0.00    Min.   :  0.0   \n 1st Qu.:   1.00   1st Qu.:  1.00    1st Qu.:  0.0   \n Median :   3.00   Median :  5.00    Median : 45.0   \n Mean   :   7.03   Mean   : 23.27    Mean   :112.8   \n 3rd Qu.:   5.00   3rd Qu.: 24.00    3rd Qu.:227.0   \n Max.   :1250.00   Max.   :629.00    Max.   :365.0   \n```\n:::\n:::\n\n\nAfter using the function summary(), I can determine that my dataset has extreme values that would make my graphs difficult to see. Therefore, I'll filter the price between \\$50 and \\$500 per night.\n\n##Filtering price per night and compare prices by borough\n\n\n::: {.cell}\n\n```{.r .cell-code}\nListings %>%\n  filter(price >= 50 & price <= 500)%>%\n  ggplot(aes(borough, price))+geom_violin()+\n  theme_classic()+\n  stat_summary(fun = \"mean\", geom = \"point\", color = \"black\")+\n  labs(title = \"Airbnb Price Comparison by Borough\", y = \"Price per night\", x = \"NY Borough\")\n```\n\n::: {.cell-output-display}\n![](MarcelaRobinson_challenge5-airbnb-_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nBy creating a violin plot I can determine the distribution of the prices for listings by borough. For this graph, I have set a point to represent the mean. Looking at the graph, I can observe that Manhattan has the highest prices for listings, followed by Brooklyn.\n\n##Create a graph using to compare prices by room type\n\n::: {.cell}\n\n```{.r .cell-code}\nListings%>%\n  ggplot(aes(room_type, price)) + geom_point()+\n  theme_bw()+\n  labs(title = \"Airbnb Price Comparison by Room Type\", y = \"Price per night\", x = \"Room Type\")+\n  facet_wrap(vars(room_type))\n```\n\n::: {.cell-output-display}\n![](MarcelaRobinson_challenge5-airbnb-_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nI also wanted to see and compare prices by room type. By using the function facet_wrap(), I was able to divide a geom_point by room type: entire home, private room, and shared room. Although there are some outliers, we can determine that the prices for the entire home are higher than the other type of rooms. \n\n#Make proportional crosstabs for room_type and borough\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(xtabs(~ room_type + borough, Listings))*100\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 borough\nroom_type               Bronx    Brooklyn   Manhattan      Queens Staten Island\n  Entire home/apt  0.77513038 19.55005624 26.99458022  4.28673689    0.35995501\n  Private room     1.33346968 20.72195521 16.32477758  6.89641068    0.38449739\n  Shared room      0.12271193  0.84466714  0.98169547  0.40494938    0.01840679\n```\n:::\n:::\n\n\nBy creating a proportional crosstabs for room_type and borough, I can determine that Manhattan has the most listings for entire home/apt with 27%, followed by Brooklyn with 19.5%. For private room, Brooklyn has the most listings with 21%. I can also determine from this crosstabs that there are is a small number of shared rooms compared to the other types of rooms and most of the shared rooms are in Manhattan. We can also notice that Staten Island has the least number of listings.\n\n\n",
    "supporting": [
      "MarcelaRobinson_challenge5-airbnb-_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}