{
  "hash": "6677d6bcf888708f1b30dfb4dbcd00ce",
  "result": {
    "markdown": "---\ntitle: \"Challenge8_MarcelaRobinson\"\nauthor: \"Marcela Robinson\"\neditor: visual\nDate: January 22, 2023\nDescription: \"Reading multiple data sets\"\nCategories:\n - Challenge_8\n - FAOSTAT \n - cattle\n - egg_chicken\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mmrobinson/Desktop/Github/601_Winter_2022-2023\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read the first dataset\ncattle<- here(\"posts\", \"_data\", \"FAOSTAT_cattle_dairy.csv\")%>%\nread_csv()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 36449 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#Read second dataset \nchicken<-here(\"posts\", \"_data\", \"FAOSTAT_egg_chicken.csv\")%>%\nread_csv()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 38170 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nFor this challenge, I'll be joining two sets of data. Both sets of data are provided by the Food and Agriculture Organization of the United Nations. The first set, **cattle**, represent the vaues of livestock (Milk Animals, Yield, or Production) in different areas of the world over the years. Other variables include unit, flag, flag description, and different codes. \n\nThe second set of data that I'll be joining, **chicken**, contains values of chickens (Laying, Yield, or Production) in different areas of the world over the years. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Join both datasets \njoined<-bind_rows(cattle, chicken)\nprint(joined)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74,619 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 74,609 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\nI'm using the bind_rows function since both datasets have the same variables. As I result, my new dataset called **joined** has 74619 observations and 14 variables. \n\n## Clean the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Remove unnecessary columns \njoined%>%\n  select(-c(\"Domain Code\", \"Domain\", \"Area Code\",\"Element Code\", \"Flag\", \"Flag Description\", \"Year Code\", \"Item Code\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74,619 × 6\n   Area        Element      Item                   Year Unit    Value\n   <chr>       <chr>        <chr>                 <dbl> <chr>   <dbl>\n 1 Afghanistan Milk Animals Milk, whole fresh cow  1961 Head   700000\n 2 Afghanistan Yield        Milk, whole fresh cow  1961 hg/An    5000\n 3 Afghanistan Production   Milk, whole fresh cow  1961 tonnes 350000\n 4 Afghanistan Milk Animals Milk, whole fresh cow  1962 Head   700000\n 5 Afghanistan Yield        Milk, whole fresh cow  1962 hg/An    5000\n 6 Afghanistan Production   Milk, whole fresh cow  1962 tonnes 350000\n 7 Afghanistan Milk Animals Milk, whole fresh cow  1963 Head   780000\n 8 Afghanistan Yield        Milk, whole fresh cow  1963 hg/An    5128\n 9 Afghanistan Production   Milk, whole fresh cow  1963 tonnes 400000\n10 Afghanistan Milk Animals Milk, whole fresh cow  1964 Head   780000\n# … with 74,609 more rows\n```\n:::\n\n```{.r .cell-code}\nprint(joined)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74,619 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 74,609 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}