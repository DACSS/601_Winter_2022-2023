{
  "hash": "62e594b08a1784d856346062617c8d96",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 Instructions\"\nauthor: \"Sean Conway\"\ndescription: \"Reading in data and creating a post\"\ndate: \"12/20/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xlsx ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\nbirds_csv <- read_csv(\"_data/birds.csv\")\n```\n:::\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n## View of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds_csv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1970  1970\n# … with 30,967 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n\nBy just viewing the data it looks like the data is about 30,977 bird entries and detailing for 14 features. The features mainly have domain code, domain area and  area to describe the location of the birds. For the bird type item and item code explains it. There is also an entry for the year to time the data. To understand further we need to perform more operations. \n\n## Analyzing the data\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(birds_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code        Area          \n Length:30977       Length:30977       Min.   :   1   Length:30977      \n Class :character   Class :character   1st Qu.:  79   Class :character  \n Mode  :character   Mode  :character   Median : 156   Mode  :character  \n                                       Mean   :1202                     \n                                       3rd Qu.: 231                     \n                                       Max.   :5504                     \n                                                                        \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:30977       Min.   :1057   Length:30977      \n 1st Qu.:5112   Class :character   1st Qu.:1057   Class :character  \n Median :5112   Mode  :character   Median :1068   Mode  :character  \n Mean   :5112                      Mean   :1066                     \n 3rd Qu.:5112                      3rd Qu.:1072                     \n Max.   :5112                      Max.   :1083                     \n                                                                    \n   Year Code         Year          Unit               Value         \n Min.   :1961   Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Median :1992   Mode  :character   Median :    1800  \n Mean   :1991   Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018   Max.   :2018                      Max.   :23707134  \n                                                  NA's   :1036      \n     Flag           Flag Description  \n Length:30977       Length:30977      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(birds_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(birds_csv$Area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"Afghanistan\"                                         \n  [2] \"Albania\"                                             \n  [3] \"Algeria\"                                             \n  [4] \"American Samoa\"                                      \n  [5] \"Angola\"                                              \n  [6] \"Antigua and Barbuda\"                                 \n  [7] \"Argentina\"                                           \n  [8] \"Armenia\"                                             \n  [9] \"Aruba\"                                               \n [10] \"Australia\"                                           \n [11] \"Austria\"                                             \n [12] \"Azerbaijan\"                                          \n [13] \"Bahamas\"                                             \n [14] \"Bahrain\"                                             \n [15] \"Bangladesh\"                                          \n [16] \"Barbados\"                                            \n [17] \"Belarus\"                                             \n [18] \"Belgium\"                                             \n [19] \"Belgium-Luxembourg\"                                  \n [20] \"Belize\"                                              \n [21] \"Benin\"                                               \n [22] \"Bermuda\"                                             \n [23] \"Bhutan\"                                              \n [24] \"Bolivia (Plurinational State of)\"                    \n [25] \"Bosnia and Herzegovina\"                              \n [26] \"Botswana\"                                            \n [27] \"Brazil\"                                              \n [28] \"Brunei Darussalam\"                                   \n [29] \"Bulgaria\"                                            \n [30] \"Burkina Faso\"                                        \n [31] \"Burundi\"                                             \n [32] \"Cabo Verde\"                                          \n [33] \"Cambodia\"                                            \n [34] \"Cameroon\"                                            \n [35] \"Canada\"                                              \n [36] \"Cayman Islands\"                                      \n [37] \"Central African Republic\"                            \n [38] \"Chad\"                                                \n [39] \"Chile\"                                               \n [40] \"China, Hong Kong SAR\"                                \n [41] \"China, Macao SAR\"                                    \n [42] \"China, mainland\"                                     \n [43] \"China, Taiwan Province of\"                           \n [44] \"Colombia\"                                            \n [45] \"Comoros\"                                             \n [46] \"Congo\"                                               \n [47] \"Cook Islands\"                                        \n [48] \"Costa Rica\"                                          \n [49] \"Côte d'Ivoire\"                                       \n [50] \"Croatia\"                                             \n [51] \"Cuba\"                                                \n [52] \"Cyprus\"                                              \n [53] \"Czechia\"                                             \n [54] \"Czechoslovakia\"                                      \n [55] \"Democratic People's Republic of Korea\"               \n [56] \"Democratic Republic of the Congo\"                    \n [57] \"Denmark\"                                             \n [58] \"Dominica\"                                            \n [59] \"Dominican Republic\"                                  \n [60] \"Ecuador\"                                             \n [61] \"Egypt\"                                               \n [62] \"El Salvador\"                                         \n [63] \"Equatorial Guinea\"                                   \n [64] \"Eritrea\"                                             \n [65] \"Estonia\"                                             \n [66] \"Eswatini\"                                            \n [67] \"Ethiopia\"                                            \n [68] \"Ethiopia PDR\"                                        \n [69] \"Falkland Islands (Malvinas)\"                         \n [70] \"Fiji\"                                                \n [71] \"Finland\"                                             \n [72] \"France\"                                              \n [73] \"French Guyana\"                                       \n [74] \"French Polynesia\"                                    \n [75] \"Gabon\"                                               \n [76] \"Gambia\"                                              \n [77] \"Georgia\"                                             \n [78] \"Germany\"                                             \n [79] \"Ghana\"                                               \n [80] \"Greece\"                                              \n [81] \"Grenada\"                                             \n [82] \"Guadeloupe\"                                          \n [83] \"Guam\"                                                \n [84] \"Guatemala\"                                           \n [85] \"Guinea\"                                              \n [86] \"Guinea-Bissau\"                                       \n [87] \"Guyana\"                                              \n [88] \"Haiti\"                                               \n [89] \"Honduras\"                                            \n [90] \"Hungary\"                                             \n [91] \"Iceland\"                                             \n [92] \"India\"                                               \n [93] \"Indonesia\"                                           \n [94] \"Iran (Islamic Republic of)\"                          \n [95] \"Iraq\"                                                \n [96] \"Ireland\"                                             \n [97] \"Israel\"                                              \n [98] \"Italy\"                                               \n [99] \"Jamaica\"                                             \n[100] \"Japan\"                                               \n[101] \"Jordan\"                                              \n[102] \"Kazakhstan\"                                          \n[103] \"Kenya\"                                               \n[104] \"Kiribati\"                                            \n[105] \"Kuwait\"                                              \n[106] \"Kyrgyzstan\"                                          \n[107] \"Lao People's Democratic Republic\"                    \n[108] \"Latvia\"                                              \n[109] \"Lebanon\"                                             \n[110] \"Lesotho\"                                             \n[111] \"Liberia\"                                             \n[112] \"Libya\"                                               \n[113] \"Liechtenstein\"                                       \n[114] \"Lithuania\"                                           \n[115] \"Luxembourg\"                                          \n[116] \"Madagascar\"                                          \n[117] \"Malawi\"                                              \n[118] \"Malaysia\"                                            \n[119] \"Mali\"                                                \n[120] \"Malta\"                                               \n[121] \"Martinique\"                                          \n[122] \"Mauritania\"                                          \n[123] \"Mauritius\"                                           \n[124] \"Mexico\"                                              \n[125] \"Micronesia (Federated States of)\"                    \n[126] \"Mongolia\"                                            \n[127] \"Montenegro\"                                          \n[128] \"Montserrat\"                                          \n[129] \"Morocco\"                                             \n[130] \"Mozambique\"                                          \n[131] \"Myanmar\"                                             \n[132] \"Namibia\"                                             \n[133] \"Nauru\"                                               \n[134] \"Nepal\"                                               \n[135] \"Netherlands\"                                         \n[136] \"Netherlands Antilles (former)\"                       \n[137] \"New Caledonia\"                                       \n[138] \"New Zealand\"                                         \n[139] \"Nicaragua\"                                           \n[140] \"Niger\"                                               \n[141] \"Nigeria\"                                             \n[142] \"Niue\"                                                \n[143] \"North Macedonia\"                                     \n[144] \"Norway\"                                              \n[145] \"Oman\"                                                \n[146] \"Pacific Islands Trust Territory\"                     \n[147] \"Pakistan\"                                            \n[148] \"Palestine\"                                           \n[149] \"Panama\"                                              \n[150] \"Papua New Guinea\"                                    \n[151] \"Paraguay\"                                            \n[152] \"Peru\"                                                \n[153] \"Philippines\"                                         \n[154] \"Poland\"                                              \n[155] \"Portugal\"                                            \n[156] \"Puerto Rico\"                                         \n[157] \"Qatar\"                                               \n[158] \"Republic of Korea\"                                   \n[159] \"Republic of Moldova\"                                 \n[160] \"Réunion\"                                             \n[161] \"Romania\"                                             \n[162] \"Russian Federation\"                                  \n[163] \"Rwanda\"                                              \n[164] \"Saint Helena, Ascension and Tristan da Cunha\"        \n[165] \"Saint Kitts and Nevis\"                               \n[166] \"Saint Lucia\"                                         \n[167] \"Saint Pierre and Miquelon\"                           \n[168] \"Saint Vincent and the Grenadines\"                    \n[169] \"Samoa\"                                               \n[170] \"Sao Tome and Principe\"                               \n[171] \"Saudi Arabia\"                                        \n[172] \"Senegal\"                                             \n[173] \"Serbia\"                                              \n[174] \"Serbia and Montenegro\"                               \n[175] \"Seychelles\"                                          \n[176] \"Sierra Leone\"                                        \n[177] \"Singapore\"                                           \n[178] \"Slovakia\"                                            \n[179] \"Slovenia\"                                            \n[180] \"Solomon Islands\"                                     \n[181] \"Somalia\"                                             \n[182] \"South Africa\"                                        \n[183] \"South Sudan\"                                         \n[184] \"Spain\"                                               \n[185] \"Sri Lanka\"                                           \n[186] \"Sudan\"                                               \n[187] \"Sudan (former)\"                                      \n[188] \"Suriname\"                                            \n[189] \"Sweden\"                                              \n[190] \"Switzerland\"                                         \n[191] \"Syrian Arab Republic\"                                \n[192] \"Tajikistan\"                                          \n[193] \"Thailand\"                                            \n[194] \"Timor-Leste\"                                         \n[195] \"Togo\"                                                \n[196] \"Tokelau\"                                             \n[197] \"Tonga\"                                               \n[198] \"Trinidad and Tobago\"                                 \n[199] \"Tunisia\"                                             \n[200] \"Turkey\"                                              \n[201] \"Turkmenistan\"                                        \n[202] \"Tuvalu\"                                              \n[203] \"Uganda\"                                              \n[204] \"Ukraine\"                                             \n[205] \"United Arab Emirates\"                                \n[206] \"United Kingdom of Great Britain and Northern Ireland\"\n[207] \"United Republic of Tanzania\"                         \n[208] \"United States of America\"                            \n[209] \"United States Virgin Islands\"                        \n[210] \"Uruguay\"                                             \n[211] \"USSR\"                                                \n[212] \"Uzbekistan\"                                          \n[213] \"Vanuatu\"                                             \n[214] \"Venezuela (Bolivarian Republic of)\"                  \n[215] \"Viet Nam\"                                            \n[216] \"Wallis and Futuna Islands\"                           \n[217] \"Yemen\"                                               \n[218] \"Yugoslav SFR\"                                        \n[219] \"Zambia\"                                              \n[220] \"Zimbabwe\"                                            \n[221] \"World\"                                               \n[222] \"Africa\"                                              \n[223] \"Eastern Africa\"                                      \n[224] \"Middle Africa\"                                       \n[225] \"Northern Africa\"                                     \n[226] \"Southern Africa\"                                     \n[227] \"Western Africa\"                                      \n[228] \"Americas\"                                            \n[229] \"Northern America\"                                    \n[230] \"Central America\"                                     \n[231] \"Caribbean\"                                           \n[232] \"South America\"                                       \n[233] \"Asia\"                                                \n[234] \"Central Asia\"                                        \n[235] \"Eastern Asia\"                                        \n[236] \"Southern Asia\"                                       \n[237] \"South-eastern Asia\"                                  \n[238] \"Western Asia\"                                        \n[239] \"Europe\"                                              \n[240] \"Eastern Europe\"                                      \n[241] \"Northern Europe\"                                     \n[242] \"Southern Europe\"                                     \n[243] \"Western Europe\"                                      \n[244] \"Oceania\"                                             \n[245] \"Australia and New Zealand\"                           \n[246] \"Melanesia\"                                           \n[247] \"Micronesia\"                                          \n[248] \"Polynesia\"                                           \n```\n:::\n\n```{.r .cell-code}\nlength(unique(birds_csv$Area))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 248\n```\n:::\n\n```{.r .cell-code}\nunique(birds_csv$Item)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chickens\"               \"Ducks\"                  \"Geese and guinea fowls\"\n[4] \"Turkeys\"                \"Pigeons, other birds\"  \n```\n:::\n\n```{.r .cell-code}\nlength(unique(birds_csv$Item))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nAfter the following analysis it is clear that the data has been collected across the world for different countries from 1961 to 2018. The data is very specific to few types of the birds like chickens, ducks etc. We can say that the data is majorly from the poultry farms across the world. This might have other animals since they are only focusing the birds the entries are restricted to poultry birds. This data might be used to keep a track of the poultry birds in the that area with the count. There are total 248 countries for 5 different kind of birds including other birds. However, some the rows are still not clear of their purpose.\n\n## Viewing data for a particular Country for further analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds_csv_america <- filter(birds_csv, Area == \"Europe\")\nbirds_csv_america\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 290 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …    5400 Euro…    5112 Stocks     1057 Chic…    1970  1970\n# … with 280 more rows, 4 more variables: Unit <chr>, Value <dbl>, Flag <chr>,\n#   `Flag Description` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(birds_csv_america)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code        Area          \n Length:290         Length:290         Min.   :5400   Length:290        \n Class :character   Class :character   1st Qu.:5400   Class :character  \n Mode  :character   Mode  :character   Median :5400   Mode  :character  \n                                       Mean   :5400                     \n                                       3rd Qu.:5400                     \n                                       Max.   :5400                     \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:290         Min.   :1057   Length:290        \n 1st Qu.:5112   Class :character   1st Qu.:1068   Class :character  \n Median :5112   Mode  :character   Median :1072   Mode  :character  \n Mean   :5112                      Mean   :1072                     \n 3rd Qu.:5112                      3rd Qu.:1079                     \n Max.   :5112                      Max.   :1083                     \n   Year Code         Year          Unit               Value        \n Min.   :1961   Min.   :1961   Length:290         Min.   :   2417  \n 1st Qu.:1975   1st Qu.:1975   Class :character   1st Qu.:  12047  \n Median :1990   Median :1990   Mode  :character   Median :  31402  \n Mean   :1990   Mean   :1990                      Mean   : 421435  \n 3rd Qu.:2004   3rd Qu.:2004                      3rd Qu.: 109158  \n Max.   :2018   Max.   :2018                      Max.   :2486932  \n     Flag           Flag Description  \n Length:290         Length:290        \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}