{
  "hash": "90a713f69ba176b8039032512e7b8fd2",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Cristhian Barba Garzon\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"01/02/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Reading in data\n\"animal_weight.csv\" was the chosen data set to read into R. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nweights = read_csv(\"_data/animal_weight.csv\")\nweights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 17\n  IPCC A…¹ Cattl…² Cattl…³ Buffa…⁴ Swine…⁵ Swine…⁶ Chick…⁷ Chick…⁸ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian …     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern…     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western…     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A…     400     305     380      28      28     0.9     1.8   2.7     6.8\n7 Asia         350     391     380      50     180     0.9     1.8   2.7     6.8\n8 Middle …     275     173     380      28      28     0.9     1.8   2.7     6.8\n9 Norther…     604     389     380      46     198     0.9     1.8   2.7     6.8\n# … with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¹​`IPCC Area`, ²​`Cattle - dairy`, ³​`Cattle - non-dairy`, ⁴​Buffaloes,\n#   ⁵​`Swine - market`, ⁶​`Swine - breeding`, ⁷​`Chicken - Broilers`,\n#   ⁸​`Chicken - Layers`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data is a tibble; it is a representation of the weights of different animals in different countries. It appears to be a comparison of the animals and their weights across different countries. When the data is loaded in, you can see that there are many different animals--about 17 different types--and there are about 9 different regions that the data was recorded from. \n\n## Anticipate the End Result\n\nThe end result of pivoting this data will be with new columns. There will be two new columns--types of animals and their respective weights. The original column \"IPCC Area\" will remain unchanged because that is not the focus in cleaning up this data set. The original columns of the animal types will be pivoted to become values under one column, and the respective weights will be pivoted under one column. This will reduce the amount of columns from 17 to 3, which will allow an audience to view and understand a cleaner data set. With this in mind, we can calculate what our expected rows and columns will be after pivoting our data.\n\n\n### Challenge: Describe the final dimensions\n\nComputing and printing the original data set's dimensions and the pivoted data set's expected dimensions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#dimensions\nweights %>% \n  dim() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  9 17\n```\n:::\n\n```{.r .cell-code}\n#number of rows\nrows = weights %>% \n  nrow()\n#number of columns\ncolumns = weights %>% \n  ncol()\n#number of expected rows \nrows * (columns-1) #subtracting one column because the first column has the IPCC Areas as observations; it's 144\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n\n```{.r .cell-code}\n#number of expected columns \n1 + 2 #one left over column + two additional columns going to be created in \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n\n```{.r .cell-code}\n#Considering I will be pivoting longer, the new columns will most likely be the left over Countries and the newly created columns--the animal types as the values and the animal weights as the values. \n```\n:::\n\n\nCurrently, the dimensions of the data set \"animal_weights.csv\" are 9 rows and 17 columns.\nWhen pivoted longer, the data will most likely have 144 rows and 3 columns \n\n\n### Challenge: Pivot the Chosen Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivoted_weights = pivot_longer(weights, \"Cattle - dairy\":\"Llamas\", names_to = \"Animal Types\", values_to = \"Weights\")\npivoted_weights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 144 × 3\n   `IPCC Area`         `Animal Types`     Weights\n   <chr>               <chr>                <dbl>\n 1 Indian Subcontinent Cattle - dairy       275  \n 2 Indian Subcontinent Cattle - non-dairy   110  \n 3 Indian Subcontinent Buffaloes            295  \n 4 Indian Subcontinent Swine - market        28  \n 5 Indian Subcontinent Swine - breeding      28  \n 6 Indian Subcontinent Chicken - Broilers     0.9\n 7 Indian Subcontinent Chicken - Layers       1.8\n 8 Indian Subcontinent Ducks                  2.7\n 9 Indian Subcontinent Turkeys                6.8\n10 Indian Subcontinent Sheep                 28  \n# … with 134 more rows\n```\n:::\n\n```{.r .cell-code}\ndim(pivoted_weights) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144   3\n```\n:::\n:::\n\n\nAs expected, the dimensions for the data when pivoted longer are 144 rows by 3 columns. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}