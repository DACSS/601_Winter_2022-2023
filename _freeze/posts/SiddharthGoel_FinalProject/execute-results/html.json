{
  "hash": "343c69d9b7d035ed6d267e80381867d3",
  "result": {
    "markdown": "---\ntitle: \"Final Project\"\nauthor: \"Siddharth Goel\"\ndesription: \"Final Project on Online Retail Data\"\ndate: \"02/02/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n---\n\n\n## Introduction\n\nAnalysis of Online Retail Data is the most important factor in setting up a successful online business. Unlike offline stores, where footfall can be increased using physical marketing strategies, online stores mainly rely on online advertisements and data analysis for business growth.\n\nWhile advertisements are key to getting new customers for the stores, data analysis can provide valuable information like top selling products, the best demographic, sales patterns and dead, top stock details. These bits of information can help the management decide the areas in which the business needs investment and which are the products that make the store's maximum sales.\n\nSo, in this project, I have taken a small sample of the transactions of an online retail store and will try to analyse the data and identify some patterns which may help us answer some important business questions.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'psych'\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(summarytools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'summarytools'\n\nThe following object is masked from 'package:tibble':\n\n    view\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Import the Data\n\nImporting the online retail dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail <- readr::read_csv(\"_data/online_retail.csv\")\nhead(retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n\n```{.r .cell-code}\nspec(retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  InvoiceNo = col_character(),\n  StockCode = col_character(),\n  Description = col_character(),\n  Quantity = col_double(),\n  InvoiceDate = col_datetime(format = \"\"),\n  UnitPrice = col_double(),\n  CustomerID = col_double(),\n  Country = col_character()\n)\n```\n:::\n\n```{.r .cell-code}\ndim(retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 541909      8\n```\n:::\n:::\n\n\nThe input dataset has 541909 records of goods sold in an online retail store and has 8 columns.\n\n## Dataset Summary\n\nThe columns and their descriptions are as follows :\n\n1. InvoiceNo: A 6 digit number which is the invoice number of the transaction in which the item was sold. As there can be multiple items in a transaction, the InvoiceNo column won't be unique.\n\n2. StockCode: Item code. A 5-digit integral number uniquely assigned to each product.\n\n3. Description: Item name.\n\n4. Quantity: The quantities of the item in the transaction.\n\n5. InvoiceDate: Invoice Date and time.\n\n6. UnitPrice: Product price per unit in sterling.\n\n7. CustomerID: A 5-digit integral number uniquely assigned to each customer.\n\n8. Country: The name of the country where the customer resides.\n\n\nNow using the `dfSummary` method to get the summary of each column in the dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(dfSummary(retail, \n                varnumbers = FALSE, \n                plain.ascii = FALSE, \n                style = \"grid\", \n                graph.magnif = 0.70, \n                valid.col= TRUE),\n      method= 'render', \n      table.classes= 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>retail</h4>\n<strong>Dimensions</strong>: 541909 x 8\n  <br/><strong>Duplicates</strong>: 5268\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Valid</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">InvoiceNo\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. 573585</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. 581219</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. 581492</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. 580729</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. 558475</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. 579777</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. 581217</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. 537434</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. 580730</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. 538071</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 25890 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1114</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">749</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">731</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">721</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">705</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">687</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">676</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">675</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">662</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">652</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">534537</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">98.6%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHQAAAC8BAMAAABbD5fNAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsFtBVv2wAAAHVJREFUaN7t08ERQEAUREEpCAEZkH9uLhLYQZUpPfc+/K190/SvLfP4UBQN5AO07plQtJ0GUuoo2kcDWXsrirbTQEodRftoIKWOonpFUfQ9Gkipo2gfDWTtrSjaTgMpdRTto4F8gK7BLrodw9tR9Ev0xvf/y05+Ss/rcnahTwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMi0wN1QwNDoxMTowNSswMDowMABkxPkAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDItMDdUMDQ6MTE6MDUrMDA6MDBxOXxFAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">StockCode\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. 85123A</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. 22423</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. 85099B</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. 47566</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. 20725</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. 84879</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. 22720</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. 22197</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. 21212</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. 20727</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 4060 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2313</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2203</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2159</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1727</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1639</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1502</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1477</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1476</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1385</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1350</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">524678</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">96.8%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHIAAAC8BAMAAABWEeeKAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsGLRw+YQAAAHlJREFUaN7t07ENgDAQBEFaoASgA+i/NxIaOCzBvzyXT/CWd1nm2bbGI8kpZQ7HZa8XIsmOMofKJsn6Moc97yTJjjKHyibJ+jKHyibJr2QO9UmS9WUOlU2S9WUOe95Jkh1lDpVNkvVlDsflnu+Rx5XuJMnf5fsfP8NuwnfCPTt4py4AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDItMDdUMDQ6MTE6MDYrMDA6MDAxjN5kAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAyLTA3VDA0OjExOjA2KzAwOjAwQNFm2AAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Description\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. WHITE HANGING HEART T-LIG</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. REGENCY CAKESTAND 3 TIER</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. JUMBO BAG RED RETROSPOT</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. PARTY BUNTING</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. LUNCH BAG RED RETROSPOT</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. ASSORTED COLOUR BIRD ORNA</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. SET OF 3 CAKE TINS PANTRY</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. PACK OF 72 RETROSPOT CAKE</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. LUNCH BAG  BLACK SKULL.</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. NATURAL SLATE HEART CHALK</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 4201 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2369</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2200</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2159</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1727</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1638</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1501</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1473</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1385</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1350</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1280</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">523373</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">96.8%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHIAAAC8BAMAAABWEeeKAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsGLRw+YQAAAHlJREFUaN7t07ENgDAQBEFaoASgA+i/NxIaOCzBvzyXT/CWd1nm2bbGI8kpZQ7HZa8XIsmOMofKJsn6Moc97yTJjjKHyibJ+jKHyibJr2QO9UmS9WUOlU2S9WUOe95Jkh1lDpVNkvVlDsflnu+Rx5XuJMnf5fsfP8NuwnfCPTt4py4AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDItMDdUMDQ6MTE6MDYrMDA6MDAxjN5kAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAyLTA3VDA0OjExOjA2KzAwOjAwQNFm2AAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">540455\n(99.7%)</td>\n      <td align=\"center\">1454\n(0.3%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Quantity\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 9.6 (218.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">-80995 &le; 3 &le; 80995</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 9 (22.8)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">722 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsHWhsO9wAAAEFJREFUWMPty0ENACAQxMCVACggiwPw7w0DkAtPLu2zyUj5q5dsH38J3FgTh8PhcDgcDofD4XC4v12zI+fHuvK3AeJlAU+w/7WIAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIzLTAyLTA3VDA0OjExOjA3KzAwOjAwl/vV0AAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMy0wMi0wN1QwNDoxMTowNyswMDowMOambWwAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">InvoiceDate\n[POSIXct, POSIXt]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min : 2010-12-01 08:26:00</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">med : 2011-07-19 17:17:00</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">max : 2011-12-09 12:50:00</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">range : 1y 0m 8d 4H 24M 0S</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">23260 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsLU61C3AAAAJpJREFUWMPt1MENgCAMBVBXwAkUNvDvv5tQi3Iw0nKT/IaT6SOA6V+W+St4ao1xc7uMIjDggIOOji7UIRpwgmZ19VG8Limio/uoPHT7kAN+5PIQ2VzJoMYlwOhyg1C7i+XlNRN6rhxLtpeL4HYSDte3d1e3l4bHyUq6+q7JIJPTA7U9JvfSQ+d3ze9yufTRQ0dHR6f54qrqZq4TxcnIU5pBsH8AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDItMDdUMDQ6MTE6MTErMDA6MDA4geB0AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAyLTA3VDA0OjExOjExKzAwOjAwSdxYyAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">UnitPrice\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 4.6 (96.8)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">-11062.1 &le; 2.1 &le; 38970</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.9 (21)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">1630 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsMzcnXfwAAADpJREFUWMPty7ERABEQAMArgQ44Jei/N6FA8PMpu/lG3K9umb1+Kucb0/M8z/M8z/M8z/Mee/lTi/stCBP8hxbBnC8AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDItMDdUMDQ6MTE6MTIrMDA6MDAJafrpAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAyLTA3VDA0OjExOjEyKzAwOjAweDRCVQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">CustomerID\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 15287.7 (1713.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">12346 &le; 15152 &le; 18287</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2838 (0.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">4372 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsNus7n6QAAAJlJREFUWMPt1FEKgCAMAFCPkJ2g5g3y/ndLc6KS0pSgHBv04eZDDadS/EPfYgWAXbdiaTtr7bzOnxpGnMser7trNyPOV8XN5eLVqztsx5rDVOYg9S5eO5ozac0Hl+2my2VVdHjqbmfCxC8cdiXdITAhS3dpyMDFv9bryonixIn7l3ONvY04983mykeM7upVceLEcXTQGdFxjhMsgBVS0eeqTgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMi0wN1QwNDoxMToxMyswMDowMK8e8V0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDItMDdUMDQ6MTE6MTMrMDA6MDDeQ0nhAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">406829\n(75.1%)</td>\n      <td align=\"center\">135080\n(24.9%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Country\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. United Kingdom</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Germany</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. France</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. EIRE</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. Spain</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. Netherlands</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. Belgium</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. Switzerland</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. Portugal</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. Australia</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 28 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">495478</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">91.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">9495</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">1.8%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8557</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">1.6%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8196</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">1.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2533</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2371</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2069</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">2002</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1519</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1259</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8430</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">1.6%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGwAAAC8BAMAAABvdlbRAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wIHBAsNus7n6QAAAHtJREFUaN7t2MENgCAQRFFasASxA+2/Ny82MBAT2Ly5v8Mm/Aut1V4P97HriXZj2N9s8Ckf4eZYP4fYhWE12GABGZrOFMOwnIVqq9swbDUWqkl2YhiWs1DJFMP0hmGVWahkimHbZLrFbRi2GguVTDGseqZbfEdj2G+s6l6VOpprPHZ1kQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMi0wN1QwNDoxMToxMyswMDowMK8e8V0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDItMDdUMDQ6MTE6MTMrMDA6MDDeQ0nhAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">541909\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.2)<br/>2023-02-06</p>\n</div>\n```\n:::\n:::\n\nFrom the summary, we can see that there are 25900 unique invoice numbers, which implies that this data is of 25900 transactions from 2010-12-01 to 2011-12-09 12:50:00. We can also observe that 91.4% of the customers of this store are from the United Kingdom. Moreover, the mean quantity per transaction is 9.6 which indicates that this store is mostly used to cater to bulk ordering needs of the customers.\n\nOn reading the item descriptions of some of the items, it is very clear that most of the SKUs in this store are large quantity sets of items. ie.`PACK OF 72 RETROSPOT CAKE`. This is also an indicator that this store mainly caters to wholesale/bulk orders.\n\n## Tidying the dataset\n\n### Cleaning the null values\n\nChecking the number of rows that has null data in the dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(retail))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 136534\n```\n:::\n:::\n\nThe total number of `N/A` values in the dataset is 136534, which is a bit high. Now, we will see whether any specific columns contain the bulk of these values or if the values are distributed across columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna_cols <- colSums(is.na(retail))\ncolnames(retail) [na_cols > 0]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Description\" \"CustomerID\" \n```\n:::\n:::\n\nOnly the columns `Description` and `CustomerID` have `N/A` values in them.\n\nChecking the number of rows in each column that has null data.\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(retail$Description))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1454\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(retail$CustomerID))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 135080\n```\n:::\n:::\n\nAbout 25% of the values in the column CustomerID have N/A values whereas only 0.3% of values in the column Description are N/A. So, we should be careful to form our analysis on Customers and should focus on other fields more. \n\nAlso, as there are 25% N/A values in the column CustomerID, we cannot remove the whole column as we still might moss out on important information. So, an important thing to look out for here will be entries with both CustomerID and Description as N/A. We can safely remove the entries if such a condition is met.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.cust_desc_null <- retail %>% filter(is.na(CustomerID), is.na(Description), .preserve = TRUE)\nhead(retail.cust_desc_null)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536414    22139    <NA>         56 2010-12-01 11:52:00       0      NA United…\n2 536545    21134    <NA>          1 2010-12-01 14:32:00       0      NA United…\n3 536546    22145    <NA>          1 2010-12-01 14:33:00       0      NA United…\n4 536547    37509    <NA>          1 2010-12-01 14:33:00       0      NA United…\n5 536549    85226A   <NA>          1 2010-12-01 14:34:00       0      NA United…\n6 536550    85044    <NA>          1 2010-12-01 14:34:00       0      NA United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n\n```{.r .cell-code}\ncount(retail.cust_desc_null)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1454\n```\n:::\n:::\n\n\n\nAn interesting thing we see here is that the `UnitPrice` is also `0` when `Description` and `CustomerID` columns are `N/A`.\n\nTo verify this, let us count the values which meet all 3 conditions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail %>% filter(is.na(CustomerID), is.na(Description), UnitPrice == 0, .preserve = TRUE) %>% count\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1454\n```\n:::\n:::\n\nThe counts match, which means it will be safe to delete the entries which match all the three conditions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_retail <- retail %>% subset(!(is.na(CustomerID) & is.na(Description) & UnitPrice == 0))\nhead(mutated_retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n\n```{.r .cell-code}\nnrow(mutated_retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 540455\n```\n:::\n:::\n\nWe can similarly drop all those records with a N/A CustomerID and UnitPrice 0\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_retail <- retail %>% subset(!(is.na(CustomerID) & UnitPrice == 0))\nhead(mutated_retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n:::\n\n\n## Processing and Visualization\n\n### Analysing Invoice Numbers and Categorizing Transactions\n\nLet us start our analysis by looking at the InvoiceNo column. This is an important field to be considered because the values in this column are repeated and we will use this field to get data about unique transactions.\n\nLooking at the values of the column, most of the `InvoiceNo` values are 6 digit integers whereas other values start with either the character `A` or `C`. Let us find the count of these values and try to deep dive into the meaning of these.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct_invoice_no <- distinct(mutated_retail, InvoiceNo, .keep_all = TRUE)\ndistinct_invoice_no['InvoiceStart'] <- substr(distinct_invoice_no$InvoiceNo, 0, 1)\nunique(distinct_invoice_no$InvoiceStart)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"5\" \"C\" \"A\"\n```\n:::\n\n```{.r .cell-code}\n# Counting the frequency of the first character of the InvoiceNo\ninvoice_freq <- distinct_invoice_no %>% group_by(InvoiceStart) %>% \n  summarise(total_count=n(),\n            .groups = 'drop')\ninvoice_freq\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  InvoiceStart total_count\n  <chr>              <int>\n1 5                  19963\n2 A                      3\n3 C                   3836\n```\n:::\n:::\n\n\nWe can observe from the above analysis that approx. 14.8% of the Invoice No values starts with `C`, which is a significant number. Now, let us try t find the significance of this count and the starting letters by looking at the data values where the InvoiceNo starts with `A` and `C`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.char_invoice_A <- mutated_retail %>% filter(startsWith(InvoiceNo, 'A'))\n\nretail.char_invoice_C <- mutated_retail %>% filter(startsWith(InvoiceNo, 'C'))\n\nhead(retail.char_invoice_A)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 A563185   B        Adjust…       1 2011-08-12 14:50:00  11062.      NA United…\n2 A563186   B        Adjust…       1 2011-08-12 14:51:00 -11062.      NA United…\n3 A563187   B        Adjust…       1 2011-08-12 14:52:00 -11062.      NA United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n\n```{.r .cell-code}\nhead(retail.char_invoice_C)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 C536379   D        Discou…      -1 2010-12-01 09:41:00   27.5    14527 United…\n2 C536383   35004C   SET OF…      -1 2010-12-01 09:49:00    4.65   15311 United…\n3 C536391   22556    PLASTE…     -12 2010-12-01 10:24:00    1.65   17548 United…\n4 C536391   21984    PACK O…     -24 2010-12-01 10:24:00    0.29   17548 United…\n5 C536391   21983    PACK O…     -24 2010-12-01 10:24:00    0.29   17548 United…\n6 C536391   21980    PACK O…     -24 2010-12-01 10:24:00    0.29   17548 United…\n# … with abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity,\n#   ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n:::\n\n\nAs we can see from the above generated tables, retail.char_invoice_A and retail.char_invoice_C. We notice that the values in which InvoiceNo starts with A are transactions where bad debt is adjusted. Whereas, the  values where InvoiceNo starts with C have negative Quantity written in transactions. Which means, that these transactions are not sale transactions, but cancelled transactions in which the goods were returned to the seller.\n\nI will plot this stat in a graph for better understanding\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninvoice_status <- invoice_freq %>%\n  mutate(Type = case_when(\n    InvoiceStart == \"C\" ~ \"Cancelled\",\n    InvoiceStart == \"A\" ~ \"Adjust Debt\",\n    InvoiceStart == \"5\" ~ \"Sell\",\n    ))\n\nggplot(data = invoice_status, aes(x = Type, y=total_count, fill = Type)) +\n  geom_bar(stat = \"identity\") + \n  scale_fill_brewer(palette = \"Oranges\") +\n  ggtitle(\"Transaction type vs their count\") +\n  xlab(\"Transaction type\") +\n  ylab(\"Count\")\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\nAlso, let's add a Type column to the dataset so it would be easier to filter out data if needed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_retail <- mutated_retail %>%\n  mutate(Type = case_when(\n    startsWith(InvoiceNo,'C') ~ \"Cancelled\",\n    startsWith(InvoiceNo,'A') ~ \"AdjustDebt\",\n    startsWith(InvoiceNo,'5') ~ \"Sale\",\n    ))\n\nunique(mutated_retail$Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Sale\"       \"Cancelled\"  \"AdjustDebt\"\n```\n:::\n\n```{.r .cell-code}\nhead(mutated_retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with 1 more variable: Type <chr>, and abbreviated variable names\n#   ¹​StockCode, ²​Description, ³​Quantity, ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n:::\n\n\nOne more adjustment that I would like to make to the data for future purposes is to split the `InvoiceDate` column into `Year`, `Month` and `Day` columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_retail <- mutated_retail %>%\n  mutate(Year = as.numeric(format(InvoiceDate, format = \"%Y\"))) %>%\n  mutate(Month = as.numeric(format(InvoiceDate, format = \"%m\"))) %>%\n  mutate(Day = as.numeric(format(InvoiceDate, format = \"%d\")))\n\nhead(mutated_retail)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with 4 more variables: Type <chr>, Year <dbl>, Month <dbl>, Day <dbl>, and\n#   abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity, ⁴​UnitPrice,\n#   ⁵​CustomerID\n```\n:::\n:::\n\n\n\nNow that we know that there are multiple types of transactions -> Cancelled and Sell, there is one interesting thing that we can do with this data => Calculate the most sought after products (stocks with net quantity > 0 => most bought products) and also the dead stock (stock with net quantity < 0 => the most returned product).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.quantity <- mutated_retail %>% filter(str_detect(substr(StockCode, 1, 1), '^[0-9]')) %>% group_by(StockCode, Description) %>% summarise(net_quantity = sum(Quantity))\nhot_stock <- retail.quantity %>% arrange(desc(net_quantity))\nhot_stock\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,150 × 3\n# Groups:   StockCode [3,914]\n   StockCode Description                        net_quantity\n   <chr>     <chr>                                     <dbl>\n 1 84077     WORLD WAR 2 GLIDERS ASSTD DESIGNS         53847\n 2 85099B    JUMBO BAG RED RETROSPOT                   47359\n 3 84879     ASSORTED COLOUR BIRD ORNAMENT             36381\n 4 22197     POPCORN HOLDER                            36334\n 5 21212     PACK OF 72 RETROSPOT CAKE CASES           36039\n 6 85123A    WHITE HANGING HEART T-LIGHT HOLDER        35021\n 7 23084     RABBIT NIGHT LIGHT                        30680\n 8 22492     MINI PAINT SET VINTAGE                    26437\n 9 22616     PACK OF 12 LONDON TISSUES                 26111\n10 21977     PACK OF 60 PINK PAISLEY CAKE CASES        24753\n# … with 4,140 more rows\n```\n:::\n\n```{.r .cell-code}\ndead_stock <- retail.quantity %>% arrange(net_quantity)\ndead_stock\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,150 × 3\n# Groups:   StockCode [3,914]\n   StockCode Description                     net_quantity\n   <chr>     <chr>                                  <dbl>\n 1 21645     ASSORTED TUTTI FRUTTI ROUND BOX          -24\n 2 79323W    WHITE CHERRY LIGHTS                       -8\n 3 21144     PINK POODLE HANGING DECORATION            -7\n 4 20703     BLUE PADDED SOFT MOBILE                   -6\n 5 21412     VINTAGE GOLD TINSEL REEL                  -6\n 6 35400     WOODEN BOX ADVENT CALENDAR                -6\n 7 79323P    PINK CHERRY LIGHTS                        -4\n 8 84750A    PINK SMALL GLASS CAKE STAND               -3\n 9 85042     ANTIQUE LILY FAIRY LIGHTS                 -3\n10 85063     CREAM SWEETHEART MAGAZINE RACK            -3\n# … with 4,140 more rows\n```\n:::\n:::\n\nWe now have the top selling products and the most returned products for this online store. Now, let us make it look a bit better. First, let's find out the top 10 products in the store.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10_prods <- head(hot_stock, 10)\ntop_10_prods\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n# Groups:   StockCode [10]\n   StockCode Description                        net_quantity\n   <chr>     <chr>                                     <dbl>\n 1 84077     WORLD WAR 2 GLIDERS ASSTD DESIGNS         53847\n 2 85099B    JUMBO BAG RED RETROSPOT                   47359\n 3 84879     ASSORTED COLOUR BIRD ORNAMENT             36381\n 4 22197     POPCORN HOLDER                            36334\n 5 21212     PACK OF 72 RETROSPOT CAKE CASES           36039\n 6 85123A    WHITE HANGING HEART T-LIGHT HOLDER        35021\n 7 23084     RABBIT NIGHT LIGHT                        30680\n 8 22492     MINI PAINT SET VINTAGE                    26437\n 9 22616     PACK OF 12 LONDON TISSUES                 26111\n10 21977     PACK OF 60 PINK PAISLEY CAKE CASES        24753\n```\n:::\n:::\n\n\nNow, let's put them in a pie chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_prods_pie <- ggplot(top_10_prods, aes(x = \"\", y = net_quantity, fill = Description)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  labs(title= \"Top 10 Best selling Products\")\n\ntop_prods_pie\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### Analysing Country-wise transactions\nFirst I will filter the transactions on the basis of StockCode, so that only the transactions related to products (and not extra fees, postage etc.)\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.product_transactions <- mutated_retail %>% filter(str_detect(substr(StockCode, 1, 1), '^[0-9]'))\nhead(retail.product_transactions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with 4 more variables: Type <chr>, Year <dbl>, Month <dbl>, Day <dbl>, and\n#   abbreviated variable names ¹​StockCode, ²​Description, ³​Quantity, ⁴​UnitPrice,\n#   ⁵​CustomerID\n```\n:::\n:::\n\nNow, let us find the top 5 countries with maximum transactions\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.transactions_by_country <- retail.product_transactions %>% group_by(Country, InvoiceNo) %>% count\nretail.transactions_by_country <- subset(retail.transactions_by_country, select = -c(n))\nretail.transactions_by_country <- retail.transactions_by_country %>% group_by(Country) %>% count %>% arrange(desc(n))\nretail.top_country <- head(retail.transactions_by_country, 5)\nretail.top_country\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n# Groups:   Country [5]\n  Country            n\n  <chr>          <int>\n1 United Kingdom 20932\n2 Germany          578\n3 France           441\n4 EIRE             347\n5 Belgium          117\n```\n:::\n:::\n\nHere's the plot for the same:\n\n::: {.cell}\n\n```{.r .cell-code}\ntransactions_by_country <- ggplot(retail.top_country, aes(x = Country, y = n)) +\n  geom_bar(stat = \"identity\", fill = \"Blue\") +\n  theme_minimal() + \n  labs(title=\"Top 5 Countries by transaction volume\", \n         x=\"Country\", y = \"No of Transactions\")\n\ntransactions_by_country\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\nLooking at top countries with the maximum number of customers\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.customers_by_country <- retail.product_transactions %>% group_by(Country, CustomerID) %>% count\nretail.customers_by_country <- subset(retail.customers_by_country, select = -c(n))\nretail.customers_by_country <- retail.customers_by_country %>% group_by(Country) %>% count %>% arrange(desc(n))\nretail.top_country <- head(retail.customers_by_country, 5)\nretail.top_country\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n# Groups:   Country [5]\n  Country            n\n  <chr>          <int>\n1 United Kingdom  3944\n2 Germany           95\n3 France            88\n4 Spain             30\n5 Belgium           25\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncustomer_by_country <- ggplot(retail.top_country, aes(x = Country, y = n)) +\n  geom_bar(stat = \"identity\", fill = \"Orange\") +\n  theme_minimal() + \n  labs(title=\"Top 5 Countries by Customer volume\", \n         x=\"Country\", y = \"No of Customers\")\n\ncustomer_by_country\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n### Analysis based on total sales\n\nThere is another stat we can calculate per country, which is the total sales amount.\nFirst, I create another df, which is the \n\n::: {.cell}\n\n```{.r .cell-code}\nretail.total_sales <- retail.product_transactions %>% \n  mutate(TotalSales = Quantity * UnitPrice)\n\nretail.sales_by_country <- retail.total_sales %>% group_by(Country) %>% summarise(TotalSales = sum(TotalSales)) %>% arrange(desc(TotalSales)) %>% head(5)\nretail.sales_by_country\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  Country        TotalSales\n  <chr>               <dbl>\n1 United Kingdom   8301320.\n2 Netherlands       283480.\n3 EIRE              259663.\n4 Germany           200808.\n5 France            182163.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_by_country <- ggplot(retail.sales_by_country, aes(x = Country, y = TotalSales)) +\n  geom_bar(stat = \"identity\", fill = \"Maroon\") +\n  theme_minimal() + \n  labs(title=\"Top 5 Countries by Sales\", \n         x=\"Country\", y = \"Sales\")\n\nsales_by_country\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\nWe will look at the sales per month now\n\n::: {.cell}\n\n```{.r .cell-code}\nretail.monthly_sales <- retail.total_sales %>% group_by(Year, Month) %>% summarise(Sales = sum(TotalSales))\nretail.monthly_sales\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 3\n# Groups:   Year [2]\n    Year Month    Sales\n   <dbl> <dbl>    <dbl>\n 1  2010    12  760258.\n 2  2011     1  580389.\n 3  2011     2  500494.\n 4  2011     3  680457.\n 5  2011     4  482878 \n 6  2011     5  732206.\n 7  2011     6  724991.\n 8  2011     7  677881.\n 9  2011     8  702564.\n10  2011     9 1013424.\n11  2011    10 1062674.\n12  2011    11 1432732.\n13  2011    12  441363.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=retail.monthly_sales, aes(x=Month, y=Sales)) +\n  geom_bar(stat=\"identity\") +\n  theme_minimal() + \n  labs(title=\"Monthly Sales\", \n         x=\"Month\", y = \"Sales\")\n```\n\n::: {.cell-output-display}\n![](SiddharthGoel_FinalProject_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\nWe can see from the bar plot that the sales are highest during the months of November and December, which can be accounted for by the holiday season.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(retail.total_sales)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n  InvoiceNo StockC…¹ Descr…² Quant…³ InvoiceDate         UnitP…⁴ Custo…⁵ Country\n  <chr>     <chr>    <chr>     <dbl> <dttm>                <dbl>   <dbl> <chr>  \n1 536365    85123A   WHITE …       6 2010-12-01 08:26:00    2.55   17850 United…\n2 536365    71053    WHITE …       6 2010-12-01 08:26:00    3.39   17850 United…\n3 536365    84406B   CREAM …       8 2010-12-01 08:26:00    2.75   17850 United…\n4 536365    84029G   KNITTE…       6 2010-12-01 08:26:00    3.39   17850 United…\n5 536365    84029E   RED WO…       6 2010-12-01 08:26:00    3.39   17850 United…\n6 536365    22752    SET 7 …       2 2010-12-01 08:26:00    7.65   17850 United…\n# … with 5 more variables: Type <chr>, Year <dbl>, Month <dbl>, Day <dbl>,\n#   TotalSales <dbl>, and abbreviated variable names ¹​StockCode, ²​Description,\n#   ³​Quantity, ⁴​UnitPrice, ⁵​CustomerID\n```\n:::\n:::\n\n\n## Reflection\nBeing inexperienced in the field of data science, I feel I have learned a lot by partaking in this course and doing this project.\n\nMy initial intention was to choose a sports dataset to analyse when I started this project. But, I went on with this dataset after having a look at it because of it's simplicity. This very simplicity in this dataset meant that it wasn't going to be easy to find categories in this dataset. After completing this analysis I still feel that had there been some more additional data to this set, there was a lot of information that could be extracted from the data. One such example is if we had the Categories of the products available, it would've led us to a lot of new information about sales trends for the categories. More information about the customers would've also been helpful.\n\nFor this project, I approached the analysis problem by looking at each column individually and trying to extract as much data/trends from the column as I could. After that I tried to couple these trends and get some relevant information.\n\nI faced many challenges in this project and the class tutorials as well as online resources like the R documentation and the documentation of libraries like ggplot2 helped a lot. \n\nI believe that I still have a lot to learn about Data Science, but this course has been a wonderful first step into the field and will immensely help me in this journey.\n\n\n## Bibliography\n\nDataset from Kaggle- https://www.kaggle.com/datasets/ulrikthygepedersen/online-retail-dataset\n\nGGPlot2 Documentation - https://ggplot2.tidyverse.org/reference/\n\nWickham, H., & Grolemund, G. (2016). R for data science: Visualize, model, transform, tidy, and import data. OReilly Media.\n\nWickham, H. (2010). A layered grammar of graphics. Journal of Computational I and Graphical Statistics, 19(1), 3-28.",
    "supporting": [
      "SiddharthGoel_FinalProject_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}