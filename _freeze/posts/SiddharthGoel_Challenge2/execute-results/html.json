{
  "hash": "f4d0448ed63adc9bdfc01eaca5a44eba",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Siddharth Goel\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"01/21/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - hotel_bookings.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Dataset Description\nI am reading the dataset `hotel_bookings` which contains booking information of 2 hotels `Resort Hotel` and `City Hotel`. This data contains information ranging from the booking agency of used by the guest to their arrival and departure time. In this challenge, I will attempt to provide more statistical information relevant to our inpu dataset.   \n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbookings<-read_csv(\"_data/hotel_bookings.csv\")\n```\n:::\n\n\n## Describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  hotel = col_character(),\n  is_canceled = col_double(),\n  lead_time = col_double(),\n  arrival_date_year = col_double(),\n  arrival_date_month = col_character(),\n  arrival_date_week_number = col_double(),\n  arrival_date_day_of_month = col_double(),\n  stays_in_weekend_nights = col_double(),\n  stays_in_week_nights = col_double(),\n  adults = col_double(),\n  children = col_double(),\n  babies = col_double(),\n  meal = col_character(),\n  country = col_character(),\n  market_segment = col_character(),\n  distribution_channel = col_character(),\n  is_repeated_guest = col_double(),\n  previous_cancellations = col_double(),\n  previous_bookings_not_canceled = col_double(),\n  reserved_room_type = col_character(),\n  assigned_room_type = col_character(),\n  booking_changes = col_double(),\n  deposit_type = col_character(),\n  agent = col_character(),\n  company = col_character(),\n  days_in_waiting_list = col_double(),\n  customer_type = col_character(),\n  adr = col_double(),\n  required_car_parking_spaces = col_double(),\n  total_of_special_requests = col_double(),\n  reservation_status = col_character(),\n  reservation_status_date = col_date(format = \"\")\n)\n```\n:::\n\n```{.r .cell-code}\nhead(bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n\n```{.r .cell-code}\nunique(bookings$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n\n```{.r .cell-code}\nunique(bookings$arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2015 2016 2017\n```\n:::\n\n```{.r .cell-code}\nunique(bookings$distribution_channel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Direct\"    \"Corporate\" \"TA/TO\"     \"Undefined\" \"GDS\"      \n```\n:::\n\n```{.r .cell-code}\nunique(bookings$customer_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Transient\"       \"Contract\"        \"Transient-Party\" \"Group\"          \n```\n:::\n:::\n\n\nThe input data contains 119390 rows and 32 columns. It contains the booking data for 2 hotels over 3 years (2015 - 2017)\n\n## Provide Grouped Summary Statistics\n\nI will be providing Grouped Summary Statistics as well as their interpretation and explanation in this section.\n\n### Number of bookings per hotel per year\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(bookings, hotel, arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  hotel        arrival_date_year     n\n  <chr>                    <dbl> <int>\n1 City Hotel                2015 13682\n2 City Hotel                2016 38140\n3 City Hotel                2017 27508\n4 Resort Hotel              2015  8314\n5 Resort Hotel              2016 18567\n6 Resort Hotel              2017 13179\n```\n:::\n:::\n\nStarting with a basic metric here to see which hotel gets more bookings and the trend of bookings with year.\n\n\n### Number of bookings per market segment\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(bookings, hotel, market_segment) %>%\n  arrange(hotel, desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 3\n   hotel        market_segment     n\n   <chr>        <chr>          <int>\n 1 City Hotel   Online TA      38748\n 2 City Hotel   Offline TA/TO  16747\n 3 City Hotel   Groups         13975\n 4 City Hotel   Direct          6093\n 5 City Hotel   Corporate       2986\n 6 City Hotel   Complementary    542\n 7 City Hotel   Aviation         237\n 8 City Hotel   Undefined          2\n 9 Resort Hotel Online TA      17729\n10 Resort Hotel Offline TA/TO   7472\n11 Resort Hotel Direct          6513\n12 Resort Hotel Groups          5836\n13 Resort Hotel Corporate       2309\n14 Resort Hotel Complementary    201\n```\n:::\n:::\n\nThis information can give us the count of complementary bookings per hotel, which is a very important number considering that complementary bookings are loss making for the hotels.\nMoreover, we also find out which market segment is contributing the most towards bookings at the hotels (Online bookings seem to account for most bookings in both the hotels)\n\n### Percentage of canceled bookings per year\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncanceled_df <- count(bookings, hotel, arrival_date_year, is_canceled)\n\ncanceled_df %>%\n  group_by(hotel, arrival_date_year) %>%\n  mutate(percent = n / sum(n)) %>%\n  subset(select = -c(n)) %>%\n  filter(is_canceled==1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n# Groups:   hotel, arrival_date_year [6]\n  hotel        arrival_date_year is_canceled percent\n  <chr>                    <dbl>       <dbl>   <dbl>\n1 City Hotel                2015           1   0.439\n2 City Hotel                2016           1   0.404\n3 City Hotel                2017           1   0.425\n4 Resort Hotel              2015           1   0.257\n5 Resort Hotel              2016           1   0.266\n6 Resort Hotel              2017           1   0.308\n```\n:::\n:::\n\nThis metric gives us the percentage of bookings canceled every year per hotel. From the metric, we can see that the percentage of canceled bookings has been high in `City Hotel` as compared to `Resort Hotel`\n\n### Percentage of canceled bookings per year\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_df <- count(bookings, hotel, arrival_date_year, arrival_date_month)\ncountry_df %>% group_by(hotel, arrival_date_year) %>% slice_max(order_by = arrival_date_month, n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 4\n# Groups:   hotel, arrival_date_year [6]\n   hotel      arrival_date_year arrival_date_month     n\n   <chr>                  <dbl> <chr>              <int>\n 1 City Hotel              2015 September           3529\n 2 City Hotel              2015 October             3386\n 3 City Hotel              2015 November            1235\n 4 City Hotel              2015 July                1398\n 5 City Hotel              2015 December            1654\n 6 City Hotel              2016 September           3871\n 7 City Hotel              2016 October             4219\n 8 City Hotel              2016 November            3122\n 9 City Hotel              2016 May                 3676\n10 City Hotel              2016 March               3046\n# … with 20 more rows\n```\n:::\n:::\n\nThis metric gives us the months of the year where the bookings are maximum. This helps the hotels prepare for the busy months of the year in terms of pricing, capacity, staffing, etc. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}