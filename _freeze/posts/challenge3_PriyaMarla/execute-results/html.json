{
  "hash": "b55f15eae0cc7055919a6904e92a3dd5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Priya Marla\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"01/12/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(stringr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\ncol_names = c(\"District\",\"Yes\", \"Yes%\", \"No\", \"No%\",)\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xlsx ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#loading the data from posts/_data folder\nvote_states <- read_excel(\"_data/australian_marriage_law_postal_survey_2017_-_response_final.xls\",sheet = \"Table 2\", skip = 7,\ncol_names = c(\"Location\",\"Yes\",\"rem\",\"No\",\"rem\",\"rem\",\"rem\",\"rem\",\"rem\",\"rem\",\"Response_not_clear\",\"rem\",\"No_response\",\"rem\",\"rem\",\"rem\"))\n#dataset\nvote_states\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 184 √ó 16\n   Location    Yes rem...3    No rem...5 rem...6 rem...7 rem...8 rem...9 rem..‚Ä¶¬π\n   <chr>     <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl> <lgl>     <dbl>   <dbl>\n 1 New Sout‚Ä¶    NA    NA      NA    NA        NA      NA NA           NA    NA  \n 2 Banks     37736    44.9 46343    55.1   84079     100 NA        84079    79.9\n 3 Barton    37153    43.6 47984    56.4   85137     100 NA        85137    77.8\n 4 Bennelong 42943    49.8 43215    50.2   86158     100 NA        86158    81  \n 5 Berowra   48471    54.6 40369    45.4   88840     100 NA        88840    84.5\n 6 Blaxland  20406    26.1 57926    73.9   78332     100 NA        78332    75  \n 7 Bradfield 53681    60.6 34927    39.4   88608     100 NA        88608    83.5\n 8 Calare    54091    60.2 35779    39.8   89870     100 NA        89870    77.8\n 9 Chifley   32871    41.3 46702    58.7   79573     100 NA        79573    73.7\n10 Cook      47505    55   38804    45     86309     100 NA        86309    82  \n# ‚Ä¶ with 174 more rows, 6 more variables: Response_not_clear <dbl>,\n#   rem...12 <dbl>, No_response <dbl>, rem...14 <dbl>, rem...15 <dbl>,\n#   rem...16 <dbl>, and abbreviated variable name ¬π‚Äãrem...10\n```\n:::\n\n```{.r .cell-code}\n#Cleaning the dataset\nvotes <- vote_states %>%\n  select(!contains(\"rem\")) %>% #removing percentage columns\n  mutate(State = case_when(str_ends(Location,\"Divisions\") ~ Location) ,.after = \"Location\") %>% #adding a new column state\n  fill(State, .direction = \"down\") %>% #filling the values of the column state\n  filter(!str_detect(Location, 'Total')) %>% #Removing rows having total counts\n  filter(!str_detect(Location, 'Divisions')) %>% #Removing the divisions heading rows\n  drop_na() #Removing rows with null values\nvotes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 √ó 6\n   Location  State                       Yes    No Response_not_clear No_respo‚Ä¶¬π\n   <chr>     <chr>                     <dbl> <dbl>              <dbl>      <dbl>\n 1 Banks     New South Wales Divisions 37736 46343                247      20928\n 2 Barton    New South Wales Divisions 37153 47984                226      24008\n 3 Bennelong New South Wales Divisions 42943 43215                244      19973\n 4 Berowra   New South Wales Divisions 48471 40369                212      16038\n 5 Blaxland  New South Wales Divisions 20406 57926                220      25883\n 6 Bradfield New South Wales Divisions 53681 34927                202      17261\n 7 Calare    New South Wales Divisions 54091 35779                285      25342\n 8 Chifley   New South Wales Divisions 32871 46702                263      28180\n 9 Cook      New South Wales Divisions 47505 38804                229      18713\n10 Cowper    New South Wales Divisions 57493 38317                315      25197\n# ‚Ä¶ with 140 more rows, and abbreviated variable name ¬π‚ÄãNo_response\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\n###Description\n\nThis is an Australian marriage law survey dataset. A survey has been conducted in Australia to identify whether people are ok with same gender marriages are not. People have to respond with either \"yes\" or \"no\".\nEligible participants response is sometimes clear, sometimes not clear and sometimes the candidates do not vote. When the response is clear- it can be either \"yes\" or \"no\". In this dataset, for each location the statistics of \"yes\", \"no\", \"Not clear\" and \"No Response\" have been recorded. \n\nIt has been identified that few columns and rows are unnecessary for the dataset. Hence while cleaning the dataset, starting few rows i.e till 7 have been removed and ending few rows with NULL values have been removed. For each location corresponding division has been added in the \"states\" column. Percentage columns have been removed to get a tidy view of the statistics. Count of all possible responses for each location are now recorded in columns \"Yes\", \"No\", \"Response_not_clear\", \"No_response\".\n\nTo make the dataset more tidy, I'll be using pivot_longer to get each repsonse type for specific location in separate row.\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     589.    -796.\n2 USA      1990 NAFTA     999.     643.\n3 France   1980 EU        718.    2316.\n4 Mexico   1990 NAFTA    1708.     820.\n5 USA      1980 NAFTA     790.    1421.\n6 France   1990 EU       1014.    1128.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#executed dim to know the dimentions i.e number of rows and columns of the dataset\ndim(votes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150   6\n```\n:::\n\n```{.r .cell-code}\n#To know the column names in the dataset\ncolnames(votes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Location\"           \"State\"              \"Yes\"               \n[4] \"No\"                 \"Response_not_clear\" \"No_response\"       \n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(votes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(votes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(votes) * (ncol(votes)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 600\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n2 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nCurrently there are 150 rows and 6 columns. After using pivot_longer number of rows will increase and number of columns will reduce\nExpected number of rows = 600\nExpected number of columns = 4\n\n\nAny additional comments?\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 √ó 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               589.\n 2 Mexico   1980 NAFTA incoming              -796.\n 3 USA      1990 NAFTA outgoing               999.\n 4 USA      1990 NAFTA incoming               643.\n 5 France   1980 EU    outgoing               718.\n 6 France   1980 EU    incoming              2316.\n 7 Mexico   1990 NAFTA outgoing              1708.\n 8 Mexico   1990 NAFTA incoming               820.\n 9 USA      1980 NAFTA outgoing               790.\n10 USA      1980 NAFTA incoming              1421.\n11 France   1990 EU    outgoing              1014.\n12 France   1990 EU    incoming              1128.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvotes_tidy <- pivot_longer(votes, col = c(\"Yes\",\"No\",\"Response_not_clear\",\"No_response\"),\n                           names_to = \"Response_type\",\n                           values_to = \"Stats\")\nvotes_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 √ó 4\n   Location  State                     Response_type      Stats\n   <chr>     <chr>                     <chr>              <dbl>\n 1 Banks     New South Wales Divisions Yes                37736\n 2 Banks     New South Wales Divisions No                 46343\n 3 Banks     New South Wales Divisions Response_not_clear   247\n 4 Banks     New South Wales Divisions No_response        20928\n 5 Barton    New South Wales Divisions Yes                37153\n 6 Barton    New South Wales Divisions No                 47984\n 7 Barton    New South Wales Divisions Response_not_clear   226\n 8 Barton    New South Wales Divisions No_response        24008\n 9 Bennelong New South Wales Divisions Yes                42943\n10 Bennelong New South Wales Divisions No                 43215\n# ‚Ä¶ with 590 more rows\n```\n:::\n:::\n\nTo get a comparison of number of people who votes on each category or to calculates the statistics like mean etc. or for the visual representation the dataset has to present in a pivot longer way. Now it's easier to understand the dataset.\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}