{
  "hash": "0efe83dad32a602f9b9174df34d3dcaf",
  "result": {
    "markdown": "---\ntitle: \"Homework3\"\nauthor: \"Surya Praneeth Reddy Chirasani\"\ndescription: \"\"\ndate: \"02/04/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - hw3\n  - road_accidents\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(lubridate)\nlibrary(tidytext)\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Reading Dataset\n\nFor this homework, I am going to use US Road Accidents dataset from Kaggle(https://www.kaggle.com/datasets/sobhanmoosavi/us-accidents)\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data <-read_csv(\"_data/US_Accidents_Dec21_updated.csv\", show_col_types = FALSE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: '_data/US_Accidents_Dec21_updated.csv' does not exist in current working directory ('C:/Users/praneeth/Desktop/UMass/Winter/new/601_Winter_2022-2023/posts').\n```\n:::\n\n```{.r .cell-code}\nhead(accidents_data)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(accidents_data): object 'accidents_data' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(accidents_data)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in stopifnot(inherits(x, \"tbl_df\")): object 'accidents_data' not found\n```\n:::\n:::\n\n\n\n## Data Cleaning\n\nStarting the data cleaning by renaming some of the columns for easy data handling down the line\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data <-  accidents_data %>%\n  rename(\"Distance\" = `Distance(mi)`, \"Temperature\" = `Temperature(F)`, \"Humidity\" = `Humidity(%)`, \n         \"Pressure\" = `Pressure(in)`, \"Visibility\" = `Visibility(mi)`, \"Wind_Speed\" = `Wind_Speed(mph)`, \"Wind_Chill\" = `Wind_Chill(F)`, \"Precipitation\" = `Precipitation(in)`)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in rename(., Distance = `Distance(mi)`, Temperature = `Temperature(F)`, : object 'accidents_data' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npercentage_of_missing_data <- accidents_data %>%\n    summarise(across(everything(), ~ (sum(is.na(.))/nrow(accidents_data)) *100  )) %>% \n    pivot_longer(cols = everything(), names_to = \"columns\", values_to = \"missing_data\")  %>%\n    arrange(desc(missing_data))%>%\n    filter(missing_data > 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summarise(., across(everything(), ~(sum(is.na(.))/nrow(accidents_data)) * : object 'accidents_data' not found\n```\n:::\n\n```{.r .cell-code}\npercentage_of_missing_data\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'percentage_of_missing_data' not found\n```\n:::\n:::\n\nLooking at the amount of missing data, one column \"Number\" has lot of missing data. So we can safely drop this column. There are few more columns with not so considerable missing data, at the same time it is not very high such as \"Precipitation\" and \"Wind_chill\" which can be dropped later based on the data analysis that is done as a part of the research. Also there are lot of other columns that can be dropped based on the data analysis I will be doing. For now I will be dropping \"Number\" Column. We can also safely drop \"Description\" Column\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean <- accidents_data %>% select(-Number, -Description)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., -Number, -Description): object 'accidents_data' not found\n```\n:::\n\n```{.r .cell-code}\naccidents_data_clean <- accidents_data_clean %>%\n  mutate(Accident_Duration = as.numeric(End_Time - Start_Time)) %>%\n  filter(!(Accident_Duration < 0)) %>%\n  separate(Start_Time, into = c(\"Date\", \"Time\"), sep = \" \")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., Accident_Duration = as.numeric(End_Time - Start_Time)): object 'accidents_data_clean' not found\n```\n:::\n\n```{.r .cell-code}\naccidents_data_clean <- accidents_data_clean %>% select(-End_Time)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., -End_Time): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n\nFor the analysis for road accidents, major variable to consider is \"Weather_condition\" and this has \"NA\" values i.e. missing data which means the weather condition information is missing.\n\nWe can deal with this using the following two methods:\n\n1) Treat NA as a new level and not lose other features' information.\n2) Remove all rows containing this variable's NA value.\n\nSince in the data, when weather condition is missing,  other weather related variables are missing too. so can can drop all rows containing NA values\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean <- accidents_data_clean %>% filter(!is.na(Weather_Condition))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., !is.na(Weather_Condition)): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrmarkdown::paged_table(accidents_data_clean)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n\n## Data Narrative\n\n### Data Introduction\nThis is a countrywide traffic accident dataset, which covers 49 states of the United States. The data is collected from February 2016 to 2021, and contains 2,845,342 rows and 47 columns. It is collected from multiple APIs that provide streaming traffic event data. These APIs broadcast traffic events captured by a variety of entities, such as the US and state departments of transportation, law enforcement agencies, traffic cameras, and traffic sensors within the road-networks.\n\n### Variables\n\n* `ID <chr>`: unique identifier of the accident record\n* `Severity <dbl>`: unique identifier of the accident record, 1 indicates the least impact on the traffic\n* `Start_Time <S3: POSIXct>(datetime)`: Start time of the accident in local time zone\n* `End_Time <S3: POSIXct>(datetime)`: Total emissions measured in kt\n* `Start_lat <dbl>`: latitude in GPS coordinate of the start point\n* `Start_Lng <dbl>`: longitude in GPS coordinate of the start point\n*  End_Lat <dbl>: latitude in GPS coordinate of the end point\n*  End_Lng <dbl>: longitude in GPS coordinate of the end point\n*  `Distance(mi)` <dbl>: length of the road extent affected by the accident\n*  Description  <chr>: natural language description of the accident\n*  Number <dbl>: street number in address field\n*  Street <chr>: street name in address field\n*  Side <chr>: relative side of the street (Right/Left) in address field\n*  City <chr>: city in address field\n*  County <chr>: county in address field\n*  State <chr>: state in address field\n*  Zipcode <chr>: zipcode in address field\n*  Country <chr>: country in address field\n*  Timezone <chr>: timezone based on the location of the accident (eastern, central, etc.)\n*  Airport_Code <chr>: Denotes an airport-based weather station which is the closest one to location of the accident\n*  Weather_Timestamp <S3: POSIXct>(datetime): time-stamp of weather observation record (in local time) \n*  `Temperature(F)` <dbl>: temperature (in Fahrenheit)\n*  `Wind_Chill(F)` <dbl>: wind chill (in Fahrenheit)\n* `Humidity(%)` <dbl>: humidity (in percentage)\n*  `Pressure(in)` <dbl>: air pressure (in inches)\n*  `Visibility(mi)` <dbl>: visibility (in miles)\n*  Wind_Direction <chr>: wind direction\n*  `Wind_Speed(mph)` <dbl>: wind speed (in miles per hour)\n*  `Precipitation(in)` <dbl>: precipitation amount in inches, if there is any\n*  Weather_Condition <chr>: Shows the weather condition (rain, snow, thunderstorm, fog, etc.)\t\n*  Amenity <lgl>: POI annotation which indicates presence of amenity in a nearby location\n*  Bump <lgl>: POI annotation which indicates presence of speed bump or hump in a nearby location\n*  Crossing <lgl>: POI annotation which indicates presence of crossing in a nearby location\n*  Give_Way <lgl>: POI annotation which indicates presence of give_way in a nearby location\n*  Junction <lgl>: POI annotation which indicates presence of junction in a nearby location\n*  No_Exit <lgl>: POI annotation which indicates presence of no_exit in a nearby location\n*  Railway <lgl>: POI annotation which indicates presence of railway in a nearby location\n*  Roundabout <lgl>: POI annotation which indicates presence of roundabout in a nearby location\n*  Station <lgl>: POI annotation which indicates presence of station in a nearby location\n*  Stop <lgl>: POI annotation which indicates presence of stop in a nearby location\n*  Traffic_Calming <lgl>: POI annotation which indicates presence of traffic_calming in a nearby location\n*  Traffic_Signal <lgl>: POI annotation which indicates presence of traffic_signal in a nearby location\n*  Turning_Loop <lgl>: POI annotation which indicates presence of turning_loop in a nearby location\n*  Sunrise_Sunset <chr>: period of day (i.e. day or night) based on sunrise/sunset\n*  Civil_Twilight <chr>: period of day (i.e. day or night) based on civil twilight\n*  Nautical_Twilight <chr>: period of day (i.e. day or night) based on nautical twilight\n*  Astronomical_Twilight <chr>: period of day (i.e. day or night) based on astronomical twilight\n\n\n## Research Questions\n\nWe can answer the following research questions based on the dataset\n\n* In which states there are more density of accidents?\n    * How does accident occurrence vary based on weather or environmental stimuli\n* How does accident severity relate to accident distance?\n    * Accident distance is the length of the road extent affected by the accident and we can try to understand how this distance is distributed over each accident severity\n* What kind of effect does Weather condition have on accident severity?\n    * Intuitively it makes sense to think bad weather can play a role in the cause of accidents and worse the weather is, the more severe the accidents are. For this reason this would be a very interesting question to explore\n* Is there a pattern in the time of accident?\n    * We can compare number of accidents occurring during the day vs night\n    * We can also explore if there is pattern in the hour of the day, there are majority of accidents\n* Based on the yearly data, we can analyze if there are any seasonal patterns to the accidents\n    * Using this can we predict accident occurrences in the future?\n* How does accident severity compare to the duration of accident impact on traffic flow was dismissed and the distance?\n    \n## Statistics\n\n### Accident Serverity Across States\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean %>%\n  summarize(`Mean Severity` = mean(Severity, na.rm=TRUE),\n            `Median Severity` = median(Severity, na.rm=TRUE),\n            `Standard Deviation of Severity value` = sd(Severity, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summarize(., `Mean Severity` = mean(Severity, na.rm = TRUE), : object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean %>%\n  group_by(State) %>%\n  summarize(`Mean Severity` = mean(Severity, na.rm=TRUE),\n            `Median Severity` = median(Severity, na.rm=TRUE),\n            `Standard Deviation of Severity value` = sd(Severity, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., State): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_severity_table <- table(accidents_data_clean$State,accidents_data_clean$Severity)%>%data.frame()%>%setNames(., c(\"State\",\"Severity\",\"Accidents_Count\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(accidents_data_clean$State, accidents_data_clean$Severity): object 'accidents_data_clean' not found\n```\n:::\n\n```{.r .cell-code}\nstate_severity_table\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'state_severity_table' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_severity_table <- transform(state_severity_table, State = reorder(State, -Accidents_Count))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in transform(state_severity_table, State = reorder(State, -Accidents_Count)): object 'state_severity_table' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(state_severity_table, aes(x=State,y=Accidents_Count, fill= Severity)) + geom_bar(stat='identity') +\n  theme_bw() +\n  labs(title = \"Number of Accidents in each State on the basis of Severity\", y = \"Number of Accidents\", x = \"State\") +  theme(legend.title = element_text(color = \"blue\", size = 40),\n  legend.text = element_text(color = \"red\", size = 30),\n  legend.key.size = unit(2.5, \"cm\"),\n  legend.key.width = unit(1.5,\"cm\"),) + theme(axis.text.x = element_text(colour = \"red\", size = 40,angle=90),\n        axis.text.y = element_text(colour = \"blue\", size = 40)) + theme(axis.title=element_text(size=40)) +       theme(plot.title = element_text(hjust = 0.5, size=40, face=\"bold\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(state_severity_table, aes(x = State, y = Accidents_Count, : object 'state_severity_table' not found\n```\n:::\n:::\n\n\n* For this visualization, I have used State, Severity variables or columns\n* We can see that most of the accidents has the severity of 2 in each state and overall, inferring that the accidents are not too drastic.Most common Severity value of 2 is supported from the mean and median values calculated earlier\n* California, Florida and Texas take the first three places in the most number of accidents respectively\n* Since Accident Severity level of 2 dominates the accident data, it is better to use proportion data instead of count data to compare with other variables\n\n### Should Weather Condition play a role in Accident Serverity?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- accidents_data_clean %>% group_by(Severity) %>% count(Weather_Condition) %>% mutate(Proportion = n / sum(n)) %>% filter(Proportion > 0.02) %>% select(-n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Severity): object 'accidents_data_clean' not found\n```\n:::\n\n```{.r .cell-code}\nweather\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'weather' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean%>%\n  filter(Weather_Condition == weather$Weather_Condition)%>%\n  group_by(Severity) %>%\n  count(Weather_Condition) %>%\n  mutate(n = n / sum(n)*100) %>%\n  arrange(Severity, n) %>%\n  ggplot(aes(reorder_within(Weather_Condition, n, Severity), n)) +\n  geom_col(aes(fill = !Weather_Condition == \"Fair\"), show.legend = F) +\n  facet_wrap(~ Severity, scales = \"free_y\") +\n  scale_x_reordered() +\n  coord_flip() +\n  labs(x = \"Weather Condition\",\n       y = \"Proportion(%)\",\n       title = \"How does Weather Conditions effect Severity\") +\n  theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., Weather_Condition == weather$Weather_Condition): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n* For this visualization, I have used Weather Condition, Severity variables or columns\n* We can see that most of the accidents across the severity levels is fair and cloudy. \n* Only on severity level 3, Mostly cloudy overtakes Fair. Otherwise Fair weather is the dominant weather condition when a lot of accidents happen\n* Based on this visualization, it seems the severity of an accident is not mainly affected by weather conditions.\n\n\n### Does the impact distance increase with accident severity?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean %>%\n  summarize(`Mean Distance` = mean(Distance,na.rm=TRUE),\n            `Median Distance` = median(Distance, na.rm=TRUE),\n            `Standard Deviation of Distance value` = sd(Distance, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summarize(., `Mean Distance` = mean(Distance, na.rm = TRUE), : object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistance_average <- accidents_data_clean %>%\n  group_by(Severity) %>%\n  summarize(`Mean Distance` = mean(Distance,na.rm=TRUE),\n            `Median Distance` = median(Distance, na.rm=TRUE),\n            `Standard Deviation of Distance` = sd(Distance, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Severity): object 'accidents_data_clean' not found\n```\n:::\n\n```{.r .cell-code}\ndistance_average\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'distance_average' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean %>%\n  group_by(Severity) %>%\n  summarise(prop = mean(Distance)) %>%\n  ggplot(aes(x=Severity, y=prop, fill=Severity)) +\n    geom_col() +\n    labs(\n      y = \"Average Accident effected distance (mi)\",\n      title = \"Distance vs Severity\") +\n  theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Severity): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(Distance ~ Severity, data = accidents_data_clean, xlab = \"Severity\",\n   ylab = \"Distance(in miles)\", main = \"Boxplot: Distance v Severity\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(m$data, parent.frame()): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n\n\n* For these visualizations, I have used Distance, Severity variables or columns\n* Amount of average distance effected increases with accident severity which is understandable. But for severity 2, the average distance is higher compared with severity 3 and this could be as a result of more data points for severity level 2 and so are the outliers from the box plot for severity level 2\n* The average distance effected at each severity level is around 1 but the range of distances are as high as 150 miles across severity levels 2,3 and 4\n\n### How Does Daylight effect Accident Severity?\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_clean%>% group_by(Sunrise_Sunset)%>%count()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Sunrise_Sunset): object 'accidents_data_clean' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_daylight <- accidents_data_clean %>% filter(!is.na(Sunrise_Sunset))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., !is.na(Sunrise_Sunset)): object 'accidents_data_clean' not found\n```\n:::\n\n```{.r .cell-code}\ndaylight_severity_table <- table(accidents_data_daylight$Sunrise_Sunset,accidents_data_daylight$Severity)%>%data.frame()%>%setNames(., c(\"Daylight\",\"Severity\",\"Accidents_Count\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(accidents_data_daylight$Sunrise_Sunset, accidents_data_daylight$Severity): object 'accidents_data_daylight' not found\n```\n:::\n\n```{.r .cell-code}\ndaylight_severity_table\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'daylight_severity_table' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaylight_severity_table <- transform(daylight_severity_table, Daylight = reorder(Daylight, -Accidents_Count))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in transform(daylight_severity_table, Daylight = reorder(Daylight, : object 'daylight_severity_table' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(daylight_severity_table, aes(x=Daylight,y=Accidents_Count, fill= Severity)) + geom_bar(stat='identity') +\n  theme_bw() +\n  labs(title = \"Number of Accidents(Day vs Night) on the basis of Severity\", y = \"Number of Accidents\", x = \"Time of the Day\") +  theme(legend.title = element_text(color = \"blue\", size = 40),\n  legend.text = element_text(color = \"red\", size = 30),\n  legend.key.size = unit(2.5, \"cm\"),\n  legend.key.width = unit(1.5,\"cm\"),) + theme(axis.text.x = element_text(colour = \"red\", size = 40,angle=90),\n        axis.text.y = element_text(colour = \"blue\", size = 40)) + theme(axis.title=element_text(size=40)) +       theme(plot.title = element_text(hjust = 0.5, size=40, face=\"bold\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(daylight_severity_table, aes(x = Daylight, y = Accidents_Count, : object 'daylight_severity_table' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_time <- accidents_data_daylight %>% group_by(Severity) %>% count(Sunrise_Sunset) %>% mutate(Proportion =format(round(n / sum(n), 5), nsmall = 5) )%>%select(-n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Severity): object 'accidents_data_daylight' not found\n```\n:::\n\n```{.r .cell-code}\naccident_time\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'accident_time' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_data_daylight %>%\n  group_by(Sunrise_Sunset, Severity) %>%\n  count() %>%\n  group_by(Sunrise_Sunset) %>%\n  mutate(sum = sum(n)) %>%\n  mutate(Proportion = n / sum) %>%\n  ggplot(aes(Severity, Proportion)) +\n  geom_col(aes(fill = Sunrise_Sunset), position = \"dodge\") +\n  labs(x = \"Severity\",\n       y = \"Proportion\",\n       title = \"Accident proportion changes by Daylight\") +\n  theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., Sunrise_Sunset, Severity): object 'accidents_data_daylight' not found\n```\n:::\n:::\n\n\n* For these visualizations, I have used Sunrise_sunset, Severity variables or columns\n* When we compare the total number of accidents during the day with night, we can see there are more of accidents during the day compared to night. This could be due to more number of vehicles on road during the data commuting to work\n* Looking at the second plot, we can see that there is no significant difference in the proportion of accidents at each severity level during the day when compared with night. This is interesting as one could assume the severity could be higher at night\n\n## Limitations and Future Scope\n\n* Some of the visualizations such as Weather conditions vs severity show, there is no relation between Weather conditions and severity, I would like to explore this more by accounting for severity imbalances\n\n* In the last few plots comparing severity with daylight, we have come to some interesting conclusions. If we classify the data further hourly and look into day time data, this could lead to a insightful analysis\n\n* Some questions or visualization related to seasonal patterns with respect to yearly data is missed in this homework which I hope to explore in final project\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}