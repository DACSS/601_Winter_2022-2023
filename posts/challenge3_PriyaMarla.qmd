---
title: "Challenge 3"
author: "Priya Marla"
description: "Tidy Data: Pivoting"
date: "01/12/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(stringr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.
col_names = c("District","Yes", "Yes%", "No", "No%",)

-   animal_weights.csv ‚≠ê
-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê
-   australian_marriage\*.xlsx ‚≠ê‚≠ê‚≠ê
-   USA Households\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê
-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü

```{r}
#loading the data from posts/_data folder
vote_states <- read_excel("_data/australian_marriage_law_postal_survey_2017_-_response_final.xls",sheet = "Table 2", skip = 7,
col_names = c("Location","Yes","rem","No","rem","rem","rem","rem","rem","rem","Response_not_clear","rem","No_response","rem","rem","rem"))
#dataset
vote_states
#Cleaning the dataset
votes <- vote_states %>%
  select(!contains("rem")) %>% #removing percentage columns
  mutate(State = case_when(str_ends(Location,"Divisions") ~ Location) ,.after = "Location") %>% #adding a new column state
  fill(State, .direction = "down") %>% #filling the values of the column state
  filter(!str_detect(Location, 'Total')) %>% #Removing rows having total counts
  filter(!str_detect(Location, 'Divisions')) %>% #Removing the divisions heading rows
  drop_na() #Removing rows with null values
votes
```

### Briefly describe the data

Describe the data, and be sure to comment on why you are planning to pivot it to make it "tidy"

###Description

This is an Australian marriage law survey dataset. A survey has been conducted in Australia to identify whether people are ok with same gender marriages are not. People have to respond with either "yes" or "no".
Eligible participants response is sometimes clear, sometimes not clear and sometimes the candidates do not vote. When the response is clear- it can be either "yes" or "no". In this dataset, for each location the statistics of "yes", "no", "Not clear" and "No Response" have been recorded. 

It has been identified that few columns and rows are unnecessary for the dataset. Hence while cleaning the dataset, starting few rows i.e till 7 have been removed and ending few rows with NULL values have been removed. For each location corresponding division has been added in the "states" column. Percentage columns have been removed to get a tidy view of the statistics. Count of all possible responses for each location are now recorded in columns "Yes", "No", "Response_not_clear", "No_response".

To make the dataset more tidy, I'll be using pivot_longer to get each repsonse type for specific location in separate row.

## Anticipate the End Result

The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df<-tibble(country = rep(c("Mexico", "USA", "France"),2),
           year = rep(c(1980,1990), 3), 
           trade = rep(c("NAFTA", "NAFTA", "EU"),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df

#existing rows/cases
nrow(df)

#existing columns/cases
ncol(df)

#expected rows/cases
nrow(df) * (ncol(df)-3)

# expected columns 
3 + 2
```

Or simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.

### Challenge: Describe the final dimensions

Document your work here.



```{r}
#executed dim to know the dimentions i.e number of rows and columns of the dataset
dim(votes)

#To know the column names in the dataset
colnames(votes)

#existing rows/cases
nrow(votes)

#existing columns/cases
ncol(votes)

#expected rows/cases
nrow(votes) * (ncol(votes)-2)

# expected columns 
2 + 2
```

Currently there are 150 rows and 6 columns. After using pivot_longer number of rows will increase and number of columns will reduce
Expected number of rows = 600
Expected number of columns = 4


Any additional comments?

## Pivot the Data

Now we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a "sanity" check.

### Example

```{r}
#| tbl-cap: Pivoted Example

df<-pivot_longer(df, col = c(outgoing, incoming),
                 names_to="trade_direction",
                 values_to = "trade_value")
df
```

Yes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

```{r}
votes_tidy <- pivot_longer(votes, col = c("Yes","No","Response_not_clear","No_response"),
                           names_to = "Response_type",
                           values_to = "Stats")
votes_tidy
```
To get a comparison of number of people who votes on each category or to calculates the statistics like mean etc. or for the visual representation the dataset has to present in a pivot longer way. Now it's easier to understand the dataset.

Any additional comments?
