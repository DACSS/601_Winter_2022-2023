---
title: "Challenge 6: Visualizing Time and Relationships"
author: "Surya Praneeth Reddy Chirasani"
description: ""
date: "01/26/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_6
  - debt
---

```{r}
#| label: setup
#| warning: false
library(tidyverse)
library("readxl")
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
```

## Data Description
For this Challenge I am using debt dataset. This dataset has quarterly debt data of different categories in a household such as Mortgage, HE Revolving, Auto Loan, Credit Card, Student Loan and other kinds of debt from the first quarter of Year 2003 to second Quarter of Year 2021. It also has total debt data amount which is the sum of the above mentioned six different debt data

```{r}
debt_data <-read_excel("_data/debt_in_trillions.xlsx")
debt_data
```
## Time Evolution Visualization

For this, I am looking at total debt and how it is changing over time. So I am plotting debt on y-axis and time on x-axis and joining the points by line. Since this is a simple one dimension data changing with time, I have decided to use the follwing simple graph

```{r}
debt <- debt_data%>%
        mutate(date = parse_date_time(`Year and Quarter`, orders="yq"))

ggplot(debt, aes(x=date, y=Total)) +
  geom_line()+
  scale_y_continuous(labels = scales::label_number(suffix = " Trillion"))
```
## Path-Whole realtionships Visualization

For showing the part-whole relationship, this time I am plotting individual break up debt amount(Auto Loan, Credit Card, HE Revolving, Mortgage, Other, Student Loan) of the total debt, each debt as a line plot, all in the same graph below

```{r}
debt_tidy<-debt%>%
  pivot_longer(cols = 2:7,
               names_to = "debt_type", 
               values_to = "debt_amount") %>%
  select(-Total)

ggplot(debt_tidy, aes(x=date, y=debt_amount, color=debt_type)) +
  geom_line(linewidth=0.8) +
  theme(legend.position = "right") +
  scale_y_continuous(labels = scales::label_number(suffix = " Trillion"), limits=c(0,12))
```