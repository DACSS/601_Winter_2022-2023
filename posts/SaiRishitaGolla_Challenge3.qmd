---
title: "Challenge 3"
author: "Sai Rishita Golla"
description: "Tidy Data: Pivoting"
date: "05/01/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ⭐
-   eggs_tidy.csv ⭐⭐ or organicpoultry.xls ⭐⭐⭐
-   australian_marriage\*.xlsx ⭐⭐⭐
-   USA Households\*.xlsx ⭐⭐⭐⭐
-   sce_labor_chart_data_public.csv 🌟🌟🌟🌟🌟

```{r}
data <- read_csv('_data/animal_weight.csv')
view(data)

colnames(data)
```

### Briefly describe the data

In the csv file there are different animal weights for different regions (IPCC Area) around the world. In total there are regions and 16 different animal types.
We can further tidy up the data and pivot it such that there are only three columns in the file - IPCC Area, animal type, and weight. Currently the data is untidy with 9*16 entries for animal wights vs type but with pivoting we will only have 3 columns for these entries.

## Anticipate the End Result

In the given dataframe, we have $9$ rows and $17$ variable. And in our example, only 1 of the variables is used to identify a case, so we will be pivoting $17-1$ variables, i.e, $16$ variables where the two new columns will be animal and weight. Hence there will be 3 columns - IPCC Area, animal, weight. We would expect $9*16$ rows in the final dataframe.

### Challenge: Describe the final dimensions

Document your work here.

```{r}
# existing rows/cases
nrow(data)

# existing columns/cases
ncol(data)

# expected rows/cases
nrow(data) * (ncol(data)-1)

# expected columns 
1 + 2
```

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

```{r}

# get all animal types
new_cols <- colnames(data)[-1]
#view(new_cols)

data_pivoted<-pivot_longer(data, col = new_cols,
                names_to="animal",
                values_to = "weight")
dim(data_pivoted)

view(data_pivoted)
```
